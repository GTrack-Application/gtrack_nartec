{
    "sourceFile": "lib/screens/home/identify/GTIN/gtin_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1750932456994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750932483542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,477 +12,478 @@\n // import 'package:gtrack_nartec/screens/home/identify/GTIN/add_gtin_screen.dart';\r\n // import 'package:gtrack_nartec/screens/home/identify/GTIN/gtin_information_screen.dart';\r\n // import 'package:ionicons/ionicons.dart';\r\n // import 'package:shimmer/shimmer.dart';\r\n+import 'widget/sustainability_info_tab.dart';\r\n \r\n-// class GTINScreen extends StatefulWidget {\r\n-//   const GTINScreen({super.key});\r\n+class GTINScreen extends StatefulWidget {\r\n+  const GTINScreen({super.key});\r\n \r\n-//   @override\r\n-//   State<GTINScreen> createState() => _GTINScreenState();\r\n-// }\r\n+  @override\r\n+  State<GTINScreen> createState() => _GTINScreenState();\r\n+}\r\n \r\n-// class _GTINScreenState extends State<GTINScreen> {\r\n-//   TextEditingController searchController = TextEditingController();\r\n+class _GTINScreenState extends State<GTINScreen> {\r\n+  TextEditingController searchController = TextEditingController();\r\n \r\n-//   List<GTIN_Model> products = [];\r\n-//   List<GTIN_Model> productsFiltered = [];\r\n+  List<GTIN_Model> products = [];\r\n+  List<GTIN_Model> productsFiltered = [];\r\n \r\n-//   String? userId, gcp, memberCategoryDescription;\r\n-//   @override\r\n-//   void initState() {\r\n-//     AppPreferences.getMemberId().then((value) => userId = value);\r\n-//     AppPreferences.getGcp().then((value) => gcp = value);\r\n-//     AppPreferences.getMemberCategoryDescription()\r\n-//         .then((value) => memberCategoryDescription = value);\r\n-//     context.read<GtinCubit>().getGtinData();\r\n-//     super.initState();\r\n-//   }\r\n+  String? userId, gcp, memberCategoryDescription;\r\n+  @override\r\n+  void initState() {\r\n+    AppPreferences.getMemberId().then((value) => userId = value);\r\n+    AppPreferences.getGcp().then((value) => gcp = value);\r\n+    AppPreferences.getMemberCategoryDescription()\r\n+        .then((value) => memberCategoryDescription = value);\r\n+    context.read<GtinCubit>().getGtinData();\r\n+    super.initState();\r\n+  }\r\n \r\n-//   @override\r\n-//   Widget build(BuildContext context) {\r\n-//     return Scaffold(\r\n-//       appBar: AppBar(\r\n-//         title: const Text('GTIN'),\r\n-//         backgroundColor: AppColors.skyBlue,\r\n-//       ),\r\n-//       body: SafeArea(\r\n-//         child: BlocConsumer<GtinCubit, GtinState>(\r\n-//           listener: (context, state) {\r\n-//             if (state is GtinLoadedState) {\r\n-//               products = state.data;\r\n-//               productsFiltered = state.data;\r\n-//             } else if (state is GtinDeleteProductLoadedState) {\r\n-//               AppSnackbars.success(context, \"Product Successfully Deleted\", 2);\r\n-//               context.read<GtinCubit>().getGtinData();\r\n-//             } else if (state is GtinErrorState) {\r\n-//               AppSnackbars.danger(context, state.message);\r\n-//             }\r\n-//           },\r\n-//           builder: (context, state) {\r\n-//             if (state is GtinLoadingState) {\r\n-//               Shimmer.fromColors(\r\n-//                 baseColor: Colors.grey[300]!,\r\n-//                 highlightColor: Colors.grey[100]!,\r\n-//                 child: ListView.builder(\r\n-//                   itemCount: 10,\r\n-//                   itemBuilder: (context, index) {\r\n-//                     return ListTile(\r\n-//                       leading: const CircleAvatar(\r\n-//                         radius: 30,\r\n-//                         backgroundColor: Colors.white,\r\n-//                       ),\r\n-//                       title: Container(\r\n-//                         width: 100,\r\n-//                         height: 20,\r\n-//                         color: Colors.white,\r\n-//                       ),\r\n-//                       subtitle: Container(\r\n-//                         width: 100,\r\n-//                         height: 20,\r\n-//                         color: Colors.white,\r\n-//                       ),\r\n-//                     );\r\n-//                   },\r\n-//                 ),\r\n-//               );\r\n-//             }\r\n-//             // else if (state is GtinErrorState) {\r\n-//             //   return Center(\r\n-//             //     child: Text(state.message),\r\n-//             //   );\r\n-//             // }\r\n-//             return Padding(\r\n-//               padding: const EdgeInsets.all(8.0),\r\n-//               child: Column(\r\n-//                 crossAxisAlignment: CrossAxisAlignment.start,\r\n-//                 children: [\r\n-//                   Row(\r\n-//                     mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n-//                     children: [\r\n-//                       Column(\r\n-//                         crossAxisAlignment: CrossAxisAlignment.start,\r\n-//                         children: [\r\n-//                           const Text(\r\n-//                             \"Member ID\",\r\n-//                             style: TextStyle(\r\n-//                               fontSize: 14,\r\n-//                             ),\r\n-//                           ),\r\n-//                           Text(\r\n-//                             userId ?? \"\",\r\n-//                             style: const TextStyle(\r\n-//                               fontWeight: FontWeight.bold,\r\n-//                               fontSize: 16,\r\n-//                             ),\r\n-//                           ),\r\n-//                         ],\r\n-//                       ),\r\n-//                       Column(\r\n-//                         crossAxisAlignment: CrossAxisAlignment.start,\r\n-//                         children: [\r\n-//                           const Text(\r\n-//                             \"GCP\",\r\n-//                             style: TextStyle(\r\n-//                               fontSize: 14,\r\n-//                             ),\r\n-//                           ),\r\n-//                           Text(\r\n-//                             gcp ?? \"\",\r\n-//                             style: const TextStyle(\r\n-//                               fontWeight: FontWeight.bold,\r\n-//                               fontSize: 16,\r\n-//                             ),\r\n-//                           ),\r\n-//                         ],\r\n-//                       ),\r\n-//                     ],\r\n-//                   ),\r\n-//                   const SizedBox(height: 20),\r\n-//                   Row(\r\n-//                     mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n-//                     children: [\r\n-//                       Column(\r\n-//                         crossAxisAlignment: CrossAxisAlignment.start,\r\n-//                         children: [\r\n-//                           const Text(\r\n-//                             \"Total Products\",\r\n-//                             style: TextStyle(\r\n-//                               fontSize: 14,\r\n-//                             ),\r\n-//                           ),\r\n-//                           Text(\r\n-//                             productsFiltered.length.toString(),\r\n-//                             style: const TextStyle(\r\n-//                               fontWeight: FontWeight.bold,\r\n-//                               fontSize: 16,\r\n-//                             ),\r\n-//                           ),\r\n-//                         ],\r\n-//                       ),\r\n-//                       Column(\r\n-//                         crossAxisAlignment: CrossAxisAlignment.start,\r\n-//                         children: [\r\n-//                           const Text(\r\n-//                             \"Category C\",\r\n-//                             style: TextStyle(\r\n-//                               fontSize: 14,\r\n-//                             ),\r\n-//                           ),\r\n-//                           Text(\r\n-//                             memberCategoryDescription?.replaceAll(\r\n-//                                     \"Category C\", \"\") ??\r\n-//                                 \"\",\r\n-//                             overflow: TextOverflow.ellipsis,\r\n-//                             style: const TextStyle(\r\n-//                               fontWeight: FontWeight.bold,\r\n-//                               fontSize: 15,\r\n-//                             ),\r\n-//                           ),\r\n-//                         ],\r\n-//                       ),\r\n-//                     ],\r\n-//                   ),\r\n-//                   const SizedBox(height: 10),\r\n-//                   Row(\r\n-//                     mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n-//                     children: [\r\n-//                       GestureDetector(\r\n-//                         onTap: () {\r\n-//                           AppNavigator.goToPage(\r\n-//                             context: context,\r\n-//                             screen: const AddGtinScreen(),\r\n-//                           );\r\n-//                         },\r\n-//                         child: Container(\r\n-//                           width: 100,\r\n-//                           height: 40,\r\n-//                           decoration: BoxDecoration(\r\n-//                             color: Colors.grey[200],\r\n-//                             borderRadius: BorderRadius.circular(50),\r\n-//                           ),\r\n-//                           child: Row(\r\n-//                             mainAxisAlignment: MainAxisAlignment.center,\r\n-//                             children: [\r\n-//                               Image.asset(\r\n-//                                 'assets/icons/add_Icon.png',\r\n-//                                 width: 20,\r\n-//                                 height: 20,\r\n-//                               ),\r\n-//                               const SizedBox(width: 5),\r\n-//                               Text(\r\n-//                                 'Add',\r\n-//                                 style: TextStyle(\r\n-//                                   color: Colors.green[700],\r\n-//                                   fontWeight: FontWeight.bold,\r\n-//                                 ),\r\n-//                               ),\r\n-//                             ],\r\n-//                           ),\r\n-//                         ),\r\n-//                       ),\r\n-//                       SizedBox(width: 10),\r\n-//                       Expanded(\r\n-//                         child: TextField(\r\n-//                           controller: searchController,\r\n-//                           onChanged: (value) {\r\n-//                             if (value.isNotEmpty) {\r\n-//                               setState(() {\r\n-//                                 productsFiltered = products\r\n-//                                     .where((element) => element.barcode\r\n-//                                         .toString()\r\n-//                                         .toLowerCase()\r\n-//                                         .contains(value.toLowerCase()))\r\n-//                                     .toList();\r\n-//                               });\r\n-//                             } else {\r\n-//                               setState(() {\r\n-//                                 productsFiltered = products;\r\n-//                               });\r\n-//                             }\r\n-//                           },\r\n-//                           decoration: const InputDecoration(\r\n-//                             suffixIcon: Icon(Ionicons.search_outline),\r\n-//                           ),\r\n-//                         ),\r\n-//                       ),\r\n-//                     ],\r\n-//                   ),\r\n-//                   const SizedBox(height: 20),\r\n-//                   const Padding(\r\n-//                     padding: EdgeInsets.only(left: 20.0, right: 20.0),\r\n-//                     child: Row(\r\n-//                       mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-//                       children: [\r\n-//                         Text(\r\n-//                           \"GTIN List\",\r\n-//                           style: TextStyle(fontSize: 18),\r\n-//                         ),\r\n-//                         Icon(\r\n-//                           Ionicons.filter_outline,\r\n-//                           size: 30,\r\n-//                         ),\r\n-//                       ],\r\n-//                     ),\r\n-//                   ),\r\n-//                   const SizedBox(height: 10),\r\n-//                   state is GtinLoadingState\r\n-//                       ? Expanded(\r\n-//                           child: Shimmer.fromColors(\r\n-//                             baseColor: AppColors.grey,\r\n-//                             highlightColor: AppColors.white,\r\n-//                             child: Container(\r\n-//                               height: 350,\r\n-//                               width: MediaQuery.of(context).size.width,\r\n-//                               margin: const EdgeInsets.symmetric(\r\n-//                                   horizontal: 5, vertical: 5),\r\n-//                               decoration: BoxDecoration(\r\n-//                                 borderRadius: BorderRadius.circular(20),\r\n-//                                 border: Border.all(\r\n-//                                   color: AppColors.grey,\r\n-//                                   width: 1,\r\n-//                                 ),\r\n-//                                 color: Colors.black38,\r\n-//                               ),\r\n-//                             ),\r\n-//                           ),\r\n-//                         )\r\n-//                       : Expanded(\r\n-//                           child: Container(\r\n-//                             // border\r\n-//                             decoration: BoxDecoration(\r\n-//                               border: Border.all(color: Colors.grey),\r\n-//                               borderRadius: BorderRadius.circular(10),\r\n-//                             ),\r\n-//                             child: RefreshIndicator(\r\n-//                               onRefresh: () async {\r\n-//                                 context.read<GtinCubit>().getGtinData();\r\n-//                               },\r\n-//                               child: ListView.builder(\r\n-//                                 itemCount: productsFiltered.length,\r\n-//                                 shrinkWrap: true,\r\n-//                                 physics: const BouncingScrollPhysics(),\r\n-//                                 itemBuilder: (context, index) {\r\n-//                                   return Container(\r\n-//                                     width:\r\n-//                                         MediaQuery.of(context).size.width * 0.9,\r\n-//                                     alignment: Alignment.center,\r\n-//                                     margin: const EdgeInsets.symmetric(\r\n-//                                       horizontal: 20,\r\n-//                                       vertical: 10,\r\n-//                                     ),\r\n-//                                     decoration: BoxDecoration(\r\n-//                                       color: Colors.white,\r\n-//                                       borderRadius: BorderRadius.circular(10),\r\n-//                                       boxShadow: [\r\n-//                                         BoxShadow(\r\n-//                                           color: Colors.grey.withOpacity(0.5),\r\n-//                                           spreadRadius: 5,\r\n-//                                           blurRadius: 7,\r\n-//                                           offset: const Offset(0, 3),\r\n-//                                         ),\r\n-//                                       ],\r\n-//                                       border: Border.all(\r\n-//                                           color: Colors.grey.withOpacity(0.2)),\r\n-//                                     ),\r\n-//                                     child: Dismissible(\r\n-//                                       key: UniqueKey(),\r\n-//                                       direction: DismissDirection.endToStart,\r\n-//                                       movementDuration:\r\n-//                                           const Duration(seconds: 1),\r\n-//                                       secondaryBackground: Container(\r\n-//                                         decoration: const BoxDecoration(\r\n-//                                           color: Colors.red,\r\n-//                                           borderRadius: BorderRadius.only(\r\n-//                                             topRight: Radius.circular(10),\r\n-//                                             bottomRight: Radius.circular(10),\r\n-//                                           ),\r\n-//                                         ),\r\n-//                                         child: Row(\r\n-//                                           mainAxisAlignment:\r\n-//                                               MainAxisAlignment.center,\r\n-//                                           children: [\r\n-//                                             const Text(\r\n-//                                               \"Swipe to Delete\",\r\n-//                                               style: TextStyle(\r\n-//                                                 color: Colors.white,\r\n-//                                                 fontSize: 15,\r\n-//                                               ),\r\n-//                                             ),\r\n-//                                             SizedBox(width: 10),\r\n-//                                             const Icon(\r\n-//                                               Icons.delete,\r\n-//                                               color: Colors.white,\r\n-//                                             ),\r\n-//                                           ],\r\n-//                                         ),\r\n-//                                       ),\r\n-//                                       background: Container(\r\n-//                                         decoration: const BoxDecoration(\r\n-//                                           color: Colors.red,\r\n-//                                           borderRadius: BorderRadius.only(\r\n-//                                             topLeft: Radius.circular(10),\r\n-//                                             bottomLeft: Radius.circular(10),\r\n-//                                           ),\r\n-//                                         ),\r\n-//                                         child: Row(\r\n-//                                           mainAxisAlignment:\r\n-//                                               MainAxisAlignment.center,\r\n-//                                           children: [\r\n-//                                             const Text(\r\n-//                                               \"Swipe to Delete\",\r\n-//                                               style: TextStyle(\r\n-//                                                 color: Colors.white,\r\n-//                                                 fontSize: 15,\r\n-//                                               ),\r\n-//                                             ),\r\n-//                                             SizedBox(width: 10),\r\n-//                                             const Icon(\r\n-//                                               Icons.delete,\r\n-//                                               color: Colors.white,\r\n-//                                             ),\r\n-//                                           ],\r\n-//                                         ),\r\n-//                                       ),\r\n-//                                       confirmDismiss: (direction) {\r\n-//                                         return showDialog(\r\n-//                                           context: context,\r\n-//                                           builder: (context) => AlertDialog(\r\n-//                                             title: const Text(\"Are you sure?\"),\r\n-//                                             content: const Text(\r\n-//                                                 \"Do you want to delete this product?\"),\r\n-//                                             actions: [\r\n-//                                               TextButton(\r\n-//                                                 onPressed: () {\r\n-//                                                   Navigator.of(context)\r\n-//                                                       .pop(true);\r\n-//                                                 },\r\n-//                                                 child: const Text(\"Yes\"),\r\n-//                                               ),\r\n-//                                               TextButton(\r\n-//                                                 onPressed: () {\r\n-//                                                   Navigator.of(context)\r\n-//                                                       .pop(false);\r\n-//                                                 },\r\n-//                                                 child: const Text(\"No\"),\r\n-//                                               ),\r\n-//                                             ],\r\n-//                                           ),\r\n-//                                         );\r\n-//                                       },\r\n-//                                       onDismissed: (direction) {\r\n-//                                         context\r\n-//                                             .read<GtinCubit>()\r\n-//                                             .deleteGtinProductById(\r\n-//                                                 productsFiltered[index].id ??\r\n-//                                                     \"\");\r\n-//                                       },\r\n-//                                       child: ListTile(\r\n-//                                         contentPadding:\r\n-//                                             const EdgeInsets.all(10),\r\n-//                                         title: Text(\r\n-//                                           productsFiltered[index]\r\n-//                                                   .productnameenglish ??\r\n-//                                               \"\",\r\n-//                                           style: const TextStyle(\r\n-//                                             fontSize: 14,\r\n-//                                             fontWeight: FontWeight.bold,\r\n-//                                           ),\r\n-//                                         ),\r\n-//                                         subtitle: Text(\r\n-//                                           productsFiltered[index].barcode ?? \"\",\r\n-//                                           style: const TextStyle(fontSize: 12),\r\n-//                                         ),\r\n-//                                         leading: Hero(\r\n-//                                           tag: productsFiltered[index].id ?? \"\",\r\n-//                                           child: ClipOval(\r\n-//                                             child: CachedNetworkImage(\r\n-//                                               imageUrl: productsFiltered[index]\r\n-//                                                           .frontImage ==\r\n-//                                                       null\r\n-//                                                   ? \"https://img.freepik.com/free-psd/3d-illustration-human-avatar-profile_23-2150671116.jpg?w=740&t=st=1715954816~exp=1715955416~hmac=b32613f5083d999009d81a82df971a4351afdc2a8725f2053bfa1a4af896d072\"\r\n-//                                                   : \"${AppUrls.baseUrlWith3093}${productsFiltered[index].frontImage?.replaceAll(RegExp(r'^/+|/+$'), '').replaceAll(\"\\\\\", \"/\")}\",\r\n-//                                               width: 50,\r\n-//                                               height: 50,\r\n-//                                               fit: BoxFit.cover,\r\n-//                                               errorWidget:\r\n-//                                                   (context, url, error) =>\r\n-//                                                       const Icon(\r\n-//                                                           Icons.image_outlined),\r\n-//                                             ),\r\n-//                                           ),\r\n-//                                         ),\r\n-//                                         trailing: GestureDetector(\r\n-//                                           onTap: () {\r\n-//                                             AppNavigator.goToPage(\r\n-//                                               context: context,\r\n-//                                               screen: GTINInformationScreen(\r\n-//                                                 employees:\r\n-//                                                     productsFiltered[index],\r\n-//                                               ),\r\n-//                                             );\r\n-//                                           },\r\n-//                                           child: Image.asset(\r\n-//                                               \"assets/icons/view.png\"),\r\n-//                                         ),\r\n-//                                         onTap: () {},\r\n-//                                       ),\r\n-//                                     ),\r\n-//                                   );\r\n-//                                 },\r\n-//                               ),\r\n-//                             ),\r\n-//                           ),\r\n-//                         ),\r\n-//                 ],\r\n-//               ),\r\n-//             );\r\n-//           },\r\n-//         ),\r\n-//       ),\r\n-//     );\r\n-//   }\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Scaffold(\r\n+      appBar: AppBar(\r\n+        title: const Text('GTIN'),\r\n+        backgroundColor: AppColors.skyBlue,\r\n+      ),\r\n+      body: SafeArea(\r\n+        child: BlocConsumer<GtinCubit, GtinState>(\r\n+          listener: (context, state) {\r\n+            if (state is GtinLoadedState) {\r\n+              products = state.data;\r\n+              productsFiltered = state.data;\r\n+            } else if (state is GtinDeleteProductLoadedState) {\r\n+              AppSnackbars.success(context, \"Product Successfully Deleted\", 2);\r\n+              context.read<GtinCubit>().getGtinData();\r\n+            } else if (state is GtinErrorState) {\r\n+              AppSnackbars.danger(context, state.message);\r\n+            }\r\n+          },\r\n+          builder: (context, state) {\r\n+            if (state is GtinLoadingState) {\r\n+              Shimmer.fromColors(\r\n+                baseColor: Colors.grey[300]!,\r\n+                highlightColor: Colors.grey[100]!,\r\n+                child: ListView.builder(\r\n+                  itemCount: 10,\r\n+                  itemBuilder: (context, index) {\r\n+                    return ListTile(\r\n+                      leading: const CircleAvatar(\r\n+                        radius: 30,\r\n+                        backgroundColor: Colors.white,\r\n+                      ),\r\n+                      title: Container(\r\n+                        width: 100,\r\n+                        height: 20,\r\n+                        color: Colors.white,\r\n+                      ),\r\n+                      subtitle: Container(\r\n+                        width: 100,\r\n+                        height: 20,\r\n+                        color: Colors.white,\r\n+                      ),\r\n+                    );\r\n+                  },\r\n+                ),\r\n+              );\r\n+            }\r\n+            // else if (state is GtinErrorState) {\r\n+            //   return Center(\r\n+            //     child: Text(state.message),\r\n+            //   );\r\n+            // }\r\n+            return Padding(\r\n+              padding: const EdgeInsets.all(8.0),\r\n+              child: Column(\r\n+                crossAxisAlignment: CrossAxisAlignment.start,\r\n+                children: [\r\n+                  Row(\r\n+                    mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n+                    children: [\r\n+                      Column(\r\n+                        crossAxisAlignment: CrossAxisAlignment.start,\r\n+                        children: [\r\n+                          const Text(\r\n+                            \"Member ID\",\r\n+                            style: TextStyle(\r\n+                              fontSize: 14,\r\n+                            ),\r\n+                          ),\r\n+                          Text(\r\n+                            userId ?? \"\",\r\n+                            style: const TextStyle(\r\n+                              fontWeight: FontWeight.bold,\r\n+                              fontSize: 16,\r\n+                            ),\r\n+                          ),\r\n+                        ],\r\n+                      ),\r\n+                      Column(\r\n+                        crossAxisAlignment: CrossAxisAlignment.start,\r\n+                        children: [\r\n+                          const Text(\r\n+                            \"GCP\",\r\n+                            style: TextStyle(\r\n+                              fontSize: 14,\r\n+                            ),\r\n+                          ),\r\n+                          Text(\r\n+                            gcp ?? \"\",\r\n+                            style: const TextStyle(\r\n+                              fontWeight: FontWeight.bold,\r\n+                              fontSize: 16,\r\n+                            ),\r\n+                          ),\r\n+                        ],\r\n+                      ),\r\n+                    ],\r\n+                  ),\r\n+                  const SizedBox(height: 20),\r\n+                  Row(\r\n+                    mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n+                    children: [\r\n+                      Column(\r\n+                        crossAxisAlignment: CrossAxisAlignment.start,\r\n+                        children: [\r\n+                          const Text(\r\n+                            \"Total Products\",\r\n+                            style: TextStyle(\r\n+                              fontSize: 14,\r\n+                            ),\r\n+                          ),\r\n+                          Text(\r\n+                            productsFiltered.length.toString(),\r\n+                            style: const TextStyle(\r\n+                              fontWeight: FontWeight.bold,\r\n+                              fontSize: 16,\r\n+                            ),\r\n+                          ),\r\n+                        ],\r\n+                      ),\r\n+                      Column(\r\n+                        crossAxisAlignment: CrossAxisAlignment.start,\r\n+                        children: [\r\n+                          const Text(\r\n+                            \"Category C\",\r\n+                            style: TextStyle(\r\n+                              fontSize: 14,\r\n+                            ),\r\n+                          ),\r\n+                          Text(\r\n+                            memberCategoryDescription?.replaceAll(\r\n+                                    \"Category C\", \"\") ??\r\n+                                \"\",\r\n+                            overflow: TextOverflow.ellipsis,\r\n+                            style: const TextStyle(\r\n+                              fontWeight: FontWeight.bold,\r\n+                              fontSize: 15,\r\n+                            ),\r\n+                          ),\r\n+                        ],\r\n+                      ),\r\n+                    ],\r\n+                  ),\r\n+                  const SizedBox(height: 10),\r\n+                  Row(\r\n+                    mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n+                    children: [\r\n+                      GestureDetector(\r\n+                        onTap: () {\r\n+                          AppNavigator.goToPage(\r\n+                            context: context,\r\n+                            screen: const AddGtinScreen(),\r\n+                          );\r\n+                        },\r\n+                        child: Container(\r\n+                          width: 100,\r\n+                          height: 40,\r\n+                          decoration: BoxDecoration(\r\n+                            color: Colors.grey[200],\r\n+                            borderRadius: BorderRadius.circular(50),\r\n+                          ),\r\n+                          child: Row(\r\n+                            mainAxisAlignment: MainAxisAlignment.center,\r\n+                            children: [\r\n+                              Image.asset(\r\n+                                'assets/icons/add_Icon.png',\r\n+                                width: 20,\r\n+                                height: 20,\r\n+                              ),\r\n+                              const SizedBox(width: 5),\r\n+                              Text(\r\n+                                'Add',\r\n+                                style: TextStyle(\r\n+                                  color: Colors.green[700],\r\n+                                  fontWeight: FontWeight.bold,\r\n+                                ),\r\n+                              ),\r\n+                            ],\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                      SizedBox(width: 10),\r\n+                      Expanded(\r\n+                        child: TextField(\r\n+                          controller: searchController,\r\n+                          onChanged: (value) {\r\n+                            if (value.isNotEmpty) {\r\n+                              setState(() {\r\n+                                productsFiltered = products\r\n+                                    .where((element) => element.barcode\r\n+                                        .toString()\r\n+                                        .toLowerCase()\r\n+                                        .contains(value.toLowerCase()))\r\n+                                    .toList();\r\n+                              });\r\n+                            } else {\r\n+                              setState(() {\r\n+                                productsFiltered = products;\r\n+                              });\r\n+                            }\r\n+                          },\r\n+                          decoration: const InputDecoration(\r\n+                            suffixIcon: Icon(Ionicons.search_outline),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                    ],\r\n+                  ),\r\n+                  const SizedBox(height: 20),\r\n+                  const Padding(\r\n+                    padding: EdgeInsets.only(left: 20.0, right: 20.0),\r\n+                    child: Row(\r\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                      children: [\r\n+                        Text(\r\n+                          \"GTIN List\",\r\n+                          style: TextStyle(fontSize: 18),\r\n+                        ),\r\n+                        Icon(\r\n+                          Ionicons.filter_outline,\r\n+                          size: 30,\r\n+                        ),\r\n+                      ],\r\n+                    ),\r\n+                  ),\r\n+                  const SizedBox(height: 10),\r\n+                  state is GtinLoadingState\r\n+                      ? Expanded(\r\n+                          child: Shimmer.fromColors(\r\n+                            baseColor: AppColors.grey,\r\n+                            highlightColor: AppColors.white,\r\n+                            child: Container(\r\n+                              height: 350,\r\n+                              width: MediaQuery.of(context).size.width,\r\n+                              margin: const EdgeInsets.symmetric(\r\n+                                  horizontal: 5, vertical: 5),\r\n+                              decoration: BoxDecoration(\r\n+                                borderRadius: BorderRadius.circular(20),\r\n+                                border: Border.all(\r\n+                                  color: AppColors.grey,\r\n+                                  width: 1,\r\n+                                ),\r\n+                                color: Colors.black38,\r\n+                              ),\r\n+                            ),\r\n+                          ),\r\n+                        )\r\n+                      : Expanded(\r\n+                          child: Container(\r\n+                            // border\r\n+                            decoration: BoxDecoration(\r\n+                              border: Border.all(color: Colors.grey),\r\n+                              borderRadius: BorderRadius.circular(10),\r\n+                            ),\r\n+                            child: RefreshIndicator(\r\n+                              onRefresh: () async {\r\n+                                context.read<GtinCubit>().getGtinData();\r\n+                              },\r\n+                              child: ListView.builder(\r\n+                                itemCount: productsFiltered.length,\r\n+                                shrinkWrap: true,\r\n+                                physics: const BouncingScrollPhysics(),\r\n+                                itemBuilder: (context, index) {\r\n+                                  return Container(\r\n+                                    width:\r\n+                                        MediaQuery.of(context).size.width * 0.9,\r\n+                                    alignment: Alignment.center,\r\n+                                    margin: const EdgeInsets.symmetric(\r\n+                                      horizontal: 20,\r\n+                                      vertical: 10,\r\n+                                    ),\r\n+                                    decoration: BoxDecoration(\r\n+                                      color: Colors.white,\r\n+                                      borderRadius: BorderRadius.circular(10),\r\n+                                      boxShadow: [\r\n+                                        BoxShadow(\r\n+                                          color: Colors.grey.withOpacity(0.5),\r\n+                                          spreadRadius: 5,\r\n+                                          blurRadius: 7,\r\n+                                          offset: const Offset(0, 3),\r\n+                                        ),\r\n+                                      ],\r\n+                                      border: Border.all(\r\n+                                          color: Colors.grey.withOpacity(0.2)),\r\n+                                    ),\r\n+                                    child: Dismissible(\r\n+                                      key: UniqueKey(),\r\n+                                      direction: DismissDirection.endToStart,\r\n+                                      movementDuration:\r\n+                                          const Duration(seconds: 1),\r\n+                                      secondaryBackground: Container(\r\n+                                        decoration: const BoxDecoration(\r\n+                                          color: Colors.red,\r\n+                                          borderRadius: BorderRadius.only(\r\n+                                            topRight: Radius.circular(10),\r\n+                                            bottomRight: Radius.circular(10),\r\n+                                          ),\r\n+                                        ),\r\n+                                        child: Row(\r\n+                                          mainAxisAlignment:\r\n+                                              MainAxisAlignment.center,\r\n+                                          children: [\r\n+                                            const Text(\r\n+                                              \"Swipe to Delete\",\r\n+                                              style: TextStyle(\r\n+                                                color: Colors.white,\r\n+                                                fontSize: 15,\r\n+                                              ),\r\n+                                            ),\r\n+                                            SizedBox(width: 10),\r\n+                                            const Icon(\r\n+                                              Icons.delete,\r\n+                                              color: Colors.white,\r\n+                                            ),\r\n+                                          ],\r\n+                                        ),\r\n+                                      ),\r\n+                                      background: Container(\r\n+                                        decoration: const BoxDecoration(\r\n+                                          color: Colors.red,\r\n+                                          borderRadius: BorderRadius.only(\r\n+                                            topLeft: Radius.circular(10),\r\n+                                            bottomLeft: Radius.circular(10),\r\n+                                          ),\r\n+                                        ),\r\n+                                        child: Row(\r\n+                                          mainAxisAlignment:\r\n+                                              MainAxisAlignment.center,\r\n+                                          children: [\r\n+                                            const Text(\r\n+                                              \"Swipe to Delete\",\r\n+                                              style: TextStyle(\r\n+                                                color: Colors.white,\r\n+                                                fontSize: 15,\r\n+                                              ),\r\n+                                            ),\r\n+                                            SizedBox(width: 10),\r\n+                                            const Icon(\r\n+                                              Icons.delete,\r\n+                                              color: Colors.white,\r\n+                                            ),\r\n+                                          ],\r\n+                                        ),\r\n+                                      ),\r\n+                                      confirmDismiss: (direction) {\r\n+                                        return showDialog(\r\n+                                          context: context,\r\n+                                          builder: (context) => AlertDialog(\r\n+                                            title: const Text(\"Are you sure?\"),\r\n+                                            content: const Text(\r\n+                                                \"Do you want to delete this product?\"),\r\n+                                            actions: [\r\n+                                              TextButton(\r\n+                                                onPressed: () {\r\n+                                                  Navigator.of(context)\r\n+                                                      .pop(true);\r\n+                                                },\r\n+                                                child: const Text(\"Yes\"),\r\n+                                              ),\r\n+                                              TextButton(\r\n+                                                onPressed: () {\r\n+                                                  Navigator.of(context)\r\n+                                                      .pop(false);\r\n+                                                },\r\n+                                                child: const Text(\"No\"),\r\n+                                              ),\r\n+                                            ],\r\n+                                          ),\r\n+                                        );\r\n+                                      },\r\n+                                      onDismissed: (direction) {\r\n+                                        context\r\n+                                            .read<GtinCubit>()\r\n+                                            .deleteGtinProductById(\r\n+                                                productsFiltered[index].id ??\r\n+                                                    \"\");\r\n+                                      },\r\n+                                      child: ListTile(\r\n+                                        contentPadding:\r\n+                                            const EdgeInsets.all(10),\r\n+                                        title: Text(\r\n+                                          productsFiltered[index]\r\n+                                                  .productnameenglish ??\r\n+                                              \"\",\r\n+                                          style: const TextStyle(\r\n+                                            fontSize: 14,\r\n+                                            fontWeight: FontWeight.bold,\r\n+                                          ),\r\n+                                        ),\r\n+                                        subtitle: Text(\r\n+                                          productsFiltered[index].barcode ?? \"\",\r\n+                                          style: const TextStyle(fontSize: 12),\r\n+                                        ),\r\n+                                        leading: Hero(\r\n+                                          tag: productsFiltered[index].id ?? \"\",\r\n+                                          child: ClipOval(\r\n+                                            child: CachedNetworkImage(\r\n+                                              imageUrl: productsFiltered[index]\r\n+                                                          .frontImage ==\r\n+                                                       null\r\n+                                                   ? \"https://img.freepik.com/free-psd/3d-illustration-human-avatar-profile_23-2150671116.jpg?w=740&t=st=1715954816~exp=1715955416~hmac=b32613f5083d999009d81a82df971a4351afdc2a8725f2053bfa1a4af896d072\"\r\n+                                                   : \"${AppUrls.baseUrlWith3093}${productsFiltered[index].frontImage?.replaceAll(RegExp(r'^/+|/+$'), '').replaceAll(\"\\\\\", \"/\")}\",\r\n+                                              width: 50,\r\n+                                              height: 50,\r\n+                                              fit: BoxFit.cover,\r\n+                                              errorWidget:\r\n+                                                  (context, url, error) =>\r\n+                                                      const Icon(\r\n+                                                          Icons.image_outlined),\r\n+                                            ),\r\n+                                          ),\r\n+                                        ),\r\n+                                        trailing: GestureDetector(\r\n+                                          onTap: () {\r\n+                                            AppNavigator.goToPage(\r\n+                                              context: context,\r\n+                                              screen: GTINInformationScreen(\r\n+                                                employees:\r\n+                                                    productsFiltered[index],\r\n+                                              ),\r\n+                                            );\r\n+                                          },\r\n+                                          child: Image.asset(\r\n+                                              \"assets/icons/view.png\"),\r\n+                                        ),\r\n+                                        onTap: () {},\r\n+                                      ),\r\n+                                    ),\r\n+                                  );\r\n+                                },\r\n+                              ),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                ],\r\n+              ),\r\n+            );\r\n+          },\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n \r\n-//   Widget _buildSustainabilityTab() {\r\n-//     return const SustainabilityInfoTab();\r\n-//   }\r\n-// }\r\n+  Widget _buildSustainabilityTab() {\r\n+    return const SustainabilityInfoTab();\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1750932506298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,14 @@\n // import 'package:gtrack_nartec/screens/home/identify/GTIN/add_gtin_screen.dart';\r\n // import 'package:gtrack_nartec/screens/home/identify/GTIN/gtin_information_screen.dart';\r\n // import 'package:ionicons/ionicons.dart';\r\n // import 'package:shimmer/shimmer.dart';\r\n+import 'package:flutter/material.dart';\r\n+import 'package:flutter_bloc/flutter_bloc.dart';\r\n+import 'package:gtrack_nartec/blocs/Identify/gtin/gtin_cubit.dart';\r\n+import 'package:gtrack_nartec/constants/app_preferences.dart';\r\n+import 'package:gtrack_nartec/models/IDENTIFY/GTIN/GTINModel.dart';\r\n+\r\n import 'widget/sustainability_info_tab.dart';\r\n \r\n class GTINScreen extends StatefulWidget {\r\n   const GTINScreen({super.key});\r\n"
                },
                {
                    "date": 1750932511475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,484 +12,473 @@\n // import 'package:gtrack_nartec/screens/home/identify/GTIN/add_gtin_screen.dart';\r\n // import 'package:gtrack_nartec/screens/home/identify/GTIN/gtin_information_screen.dart';\r\n // import 'package:ionicons/ionicons.dart';\r\n // import 'package:shimmer/shimmer.dart';\r\n-import 'package:flutter/material.dart';\r\n-import 'package:flutter_bloc/flutter_bloc.dart';\r\n-import 'package:gtrack_nartec/blocs/Identify/gtin/gtin_cubit.dart';\r\n-import 'package:gtrack_nartec/constants/app_preferences.dart';\r\n-import 'package:gtrack_nartec/models/IDENTIFY/GTIN/GTINModel.dart';\r\n \r\n-import 'widget/sustainability_info_tab.dart';\r\n+// class GTINScreen extends StatefulWidget {\r\n+//   const GTINScreen({super.key});\r\n \r\n-class GTINScreen extends StatefulWidget {\r\n-  const GTINScreen({super.key});\r\n+//   @override\r\n+//   State<GTINScreen> createState() => _GTINScreenState();\r\n+// }\r\n \r\n-  @override\r\n-  State<GTINScreen> createState() => _GTINScreenState();\r\n-}\r\n+// class _GTINScreenState extends State<GTINScreen> {\r\n+//   TextEditingController searchController = TextEditingController();\r\n \r\n-class _GTINScreenState extends State<GTINScreen> {\r\n-  TextEditingController searchController = TextEditingController();\r\n+//   List<GTIN_Model> products = [];\r\n+//   List<GTIN_Model> productsFiltered = [];\r\n \r\n-  List<GTIN_Model> products = [];\r\n-  List<GTIN_Model> productsFiltered = [];\r\n+//   String? userId, gcp, memberCategoryDescription;\r\n+//   @override\r\n+//   void initState() {\r\n+//     AppPreferences.getMemberId().then((value) => userId = value);\r\n+//     AppPreferences.getGcp().then((value) => gcp = value);\r\n+//     AppPreferences.getMemberCategoryDescription()\r\n+//         .then((value) => memberCategoryDescription = value);\r\n+//     context.read<GtinCubit>().getGtinData();\r\n+//     super.initState();\r\n+//   }\r\n \r\n-  String? userId, gcp, memberCategoryDescription;\r\n-  @override\r\n-  void initState() {\r\n-    AppPreferences.getMemberId().then((value) => userId = value);\r\n-    AppPreferences.getGcp().then((value) => gcp = value);\r\n-    AppPreferences.getMemberCategoryDescription()\r\n-        .then((value) => memberCategoryDescription = value);\r\n-    context.read<GtinCubit>().getGtinData();\r\n-    super.initState();\r\n-  }\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-      appBar: AppBar(\r\n-        title: const Text('GTIN'),\r\n-        backgroundColor: AppColors.skyBlue,\r\n-      ),\r\n-      body: SafeArea(\r\n-        child: BlocConsumer<GtinCubit, GtinState>(\r\n-          listener: (context, state) {\r\n-            if (state is GtinLoadedState) {\r\n-              products = state.data;\r\n-              productsFiltered = state.data;\r\n-            } else if (state is GtinDeleteProductLoadedState) {\r\n-              AppSnackbars.success(context, \"Product Successfully Deleted\", 2);\r\n-              context.read<GtinCubit>().getGtinData();\r\n-            } else if (state is GtinErrorState) {\r\n-              AppSnackbars.danger(context, state.message);\r\n-            }\r\n-          },\r\n-          builder: (context, state) {\r\n-            if (state is GtinLoadingState) {\r\n-              Shimmer.fromColors(\r\n-                baseColor: Colors.grey[300]!,\r\n-                highlightColor: Colors.grey[100]!,\r\n-                child: ListView.builder(\r\n-                  itemCount: 10,\r\n-                  itemBuilder: (context, index) {\r\n-                    return ListTile(\r\n-                      leading: const CircleAvatar(\r\n-                        radius: 30,\r\n-                        backgroundColor: Colors.white,\r\n-                      ),\r\n-                      title: Container(\r\n-                        width: 100,\r\n-                        height: 20,\r\n-                        color: Colors.white,\r\n-                      ),\r\n-                      subtitle: Container(\r\n-                        width: 100,\r\n-                        height: 20,\r\n-                        color: Colors.white,\r\n-                      ),\r\n-                    );\r\n-                  },\r\n-                ),\r\n-              );\r\n-            }\r\n-            // else if (state is GtinErrorState) {\r\n-            //   return Center(\r\n-            //     child: Text(state.message),\r\n-            //   );\r\n-            // }\r\n-            return Padding(\r\n-              padding: const EdgeInsets.all(8.0),\r\n-              child: Column(\r\n-                crossAxisAlignment: CrossAxisAlignment.start,\r\n-                children: [\r\n-                  Row(\r\n-                    mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n-                    children: [\r\n-                      Column(\r\n-                        crossAxisAlignment: CrossAxisAlignment.start,\r\n-                        children: [\r\n-                          const Text(\r\n-                            \"Member ID\",\r\n-                            style: TextStyle(\r\n-                              fontSize: 14,\r\n-                            ),\r\n-                          ),\r\n-                          Text(\r\n-                            userId ?? \"\",\r\n-                            style: const TextStyle(\r\n-                              fontWeight: FontWeight.bold,\r\n-                              fontSize: 16,\r\n-                            ),\r\n-                          ),\r\n-                        ],\r\n-                      ),\r\n-                      Column(\r\n-                        crossAxisAlignment: CrossAxisAlignment.start,\r\n-                        children: [\r\n-                          const Text(\r\n-                            \"GCP\",\r\n-                            style: TextStyle(\r\n-                              fontSize: 14,\r\n-                            ),\r\n-                          ),\r\n-                          Text(\r\n-                            gcp ?? \"\",\r\n-                            style: const TextStyle(\r\n-                              fontWeight: FontWeight.bold,\r\n-                              fontSize: 16,\r\n-                            ),\r\n-                          ),\r\n-                        ],\r\n-                      ),\r\n-                    ],\r\n-                  ),\r\n-                  const SizedBox(height: 20),\r\n-                  Row(\r\n-                    mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n-                    children: [\r\n-                      Column(\r\n-                        crossAxisAlignment: CrossAxisAlignment.start,\r\n-                        children: [\r\n-                          const Text(\r\n-                            \"Total Products\",\r\n-                            style: TextStyle(\r\n-                              fontSize: 14,\r\n-                            ),\r\n-                          ),\r\n-                          Text(\r\n-                            productsFiltered.length.toString(),\r\n-                            style: const TextStyle(\r\n-                              fontWeight: FontWeight.bold,\r\n-                              fontSize: 16,\r\n-                            ),\r\n-                          ),\r\n-                        ],\r\n-                      ),\r\n-                      Column(\r\n-                        crossAxisAlignment: CrossAxisAlignment.start,\r\n-                        children: [\r\n-                          const Text(\r\n-                            \"Category C\",\r\n-                            style: TextStyle(\r\n-                              fontSize: 14,\r\n-                            ),\r\n-                          ),\r\n-                          Text(\r\n-                            memberCategoryDescription?.replaceAll(\r\n-                                    \"Category C\", \"\") ??\r\n-                                \"\",\r\n-                            overflow: TextOverflow.ellipsis,\r\n-                            style: const TextStyle(\r\n-                              fontWeight: FontWeight.bold,\r\n-                              fontSize: 15,\r\n-                            ),\r\n-                          ),\r\n-                        ],\r\n-                      ),\r\n-                    ],\r\n-                  ),\r\n-                  const SizedBox(height: 10),\r\n-                  Row(\r\n-                    mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n-                    children: [\r\n-                      GestureDetector(\r\n-                        onTap: () {\r\n-                          AppNavigator.goToPage(\r\n-                            context: context,\r\n-                            screen: const AddGtinScreen(),\r\n-                          );\r\n-                        },\r\n-                        child: Container(\r\n-                          width: 100,\r\n-                          height: 40,\r\n-                          decoration: BoxDecoration(\r\n-                            color: Colors.grey[200],\r\n-                            borderRadius: BorderRadius.circular(50),\r\n-                          ),\r\n-                          child: Row(\r\n-                            mainAxisAlignment: MainAxisAlignment.center,\r\n-                            children: [\r\n-                              Image.asset(\r\n-                                'assets/icons/add_Icon.png',\r\n-                                width: 20,\r\n-                                height: 20,\r\n-                              ),\r\n-                              const SizedBox(width: 5),\r\n-                              Text(\r\n-                                'Add',\r\n-                                style: TextStyle(\r\n-                                  color: Colors.green[700],\r\n-                                  fontWeight: FontWeight.bold,\r\n-                                ),\r\n-                              ),\r\n-                            ],\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                      SizedBox(width: 10),\r\n-                      Expanded(\r\n-                        child: TextField(\r\n-                          controller: searchController,\r\n-                          onChanged: (value) {\r\n-                            if (value.isNotEmpty) {\r\n-                              setState(() {\r\n-                                productsFiltered = products\r\n-                                    .where((element) => element.barcode\r\n-                                        .toString()\r\n-                                        .toLowerCase()\r\n-                                        .contains(value.toLowerCase()))\r\n-                                    .toList();\r\n-                              });\r\n-                            } else {\r\n-                              setState(() {\r\n-                                productsFiltered = products;\r\n-                              });\r\n-                            }\r\n-                          },\r\n-                          decoration: const InputDecoration(\r\n-                            suffixIcon: Icon(Ionicons.search_outline),\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                    ],\r\n-                  ),\r\n-                  const SizedBox(height: 20),\r\n-                  const Padding(\r\n-                    padding: EdgeInsets.only(left: 20.0, right: 20.0),\r\n-                    child: Row(\r\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                      children: [\r\n-                        Text(\r\n-                          \"GTIN List\",\r\n-                          style: TextStyle(fontSize: 18),\r\n-                        ),\r\n-                        Icon(\r\n-                          Ionicons.filter_outline,\r\n-                          size: 30,\r\n-                        ),\r\n-                      ],\r\n-                    ),\r\n-                  ),\r\n-                  const SizedBox(height: 10),\r\n-                  state is GtinLoadingState\r\n-                      ? Expanded(\r\n-                          child: Shimmer.fromColors(\r\n-                            baseColor: AppColors.grey,\r\n-                            highlightColor: AppColors.white,\r\n-                            child: Container(\r\n-                              height: 350,\r\n-                              width: MediaQuery.of(context).size.width,\r\n-                              margin: const EdgeInsets.symmetric(\r\n-                                  horizontal: 5, vertical: 5),\r\n-                              decoration: BoxDecoration(\r\n-                                borderRadius: BorderRadius.circular(20),\r\n-                                border: Border.all(\r\n-                                  color: AppColors.grey,\r\n-                                  width: 1,\r\n-                                ),\r\n-                                color: Colors.black38,\r\n-                              ),\r\n-                            ),\r\n-                          ),\r\n-                        )\r\n-                      : Expanded(\r\n-                          child: Container(\r\n-                            // border\r\n-                            decoration: BoxDecoration(\r\n-                              border: Border.all(color: Colors.grey),\r\n-                              borderRadius: BorderRadius.circular(10),\r\n-                            ),\r\n-                            child: RefreshIndicator(\r\n-                              onRefresh: () async {\r\n-                                context.read<GtinCubit>().getGtinData();\r\n-                              },\r\n-                              child: ListView.builder(\r\n-                                itemCount: productsFiltered.length,\r\n-                                shrinkWrap: true,\r\n-                                physics: const BouncingScrollPhysics(),\r\n-                                itemBuilder: (context, index) {\r\n-                                  return Container(\r\n-                                    width:\r\n-                                        MediaQuery.of(context).size.width * 0.9,\r\n-                                    alignment: Alignment.center,\r\n-                                    margin: const EdgeInsets.symmetric(\r\n-                                      horizontal: 20,\r\n-                                      vertical: 10,\r\n-                                    ),\r\n-                                    decoration: BoxDecoration(\r\n-                                      color: Colors.white,\r\n-                                      borderRadius: BorderRadius.circular(10),\r\n-                                      boxShadow: [\r\n-                                        BoxShadow(\r\n-                                          color: Colors.grey.withOpacity(0.5),\r\n-                                          spreadRadius: 5,\r\n-                                          blurRadius: 7,\r\n-                                          offset: const Offset(0, 3),\r\n-                                        ),\r\n-                                      ],\r\n-                                      border: Border.all(\r\n-                                          color: Colors.grey.withOpacity(0.2)),\r\n-                                    ),\r\n-                                    child: Dismissible(\r\n-                                      key: UniqueKey(),\r\n-                                      direction: DismissDirection.endToStart,\r\n-                                      movementDuration:\r\n-                                          const Duration(seconds: 1),\r\n-                                      secondaryBackground: Container(\r\n-                                        decoration: const BoxDecoration(\r\n-                                          color: Colors.red,\r\n-                                          borderRadius: BorderRadius.only(\r\n-                                            topRight: Radius.circular(10),\r\n-                                            bottomRight: Radius.circular(10),\r\n-                                          ),\r\n-                                        ),\r\n-                                        child: Row(\r\n-                                          mainAxisAlignment:\r\n-                                              MainAxisAlignment.center,\r\n-                                          children: [\r\n-                                            const Text(\r\n-                                              \"Swipe to Delete\",\r\n-                                              style: TextStyle(\r\n-                                                color: Colors.white,\r\n-                                                fontSize: 15,\r\n-                                              ),\r\n-                                            ),\r\n-                                            SizedBox(width: 10),\r\n-                                            const Icon(\r\n-                                              Icons.delete,\r\n-                                              color: Colors.white,\r\n-                                            ),\r\n-                                          ],\r\n-                                        ),\r\n-                                      ),\r\n-                                      background: Container(\r\n-                                        decoration: const BoxDecoration(\r\n-                                          color: Colors.red,\r\n-                                          borderRadius: BorderRadius.only(\r\n-                                            topLeft: Radius.circular(10),\r\n-                                            bottomLeft: Radius.circular(10),\r\n-                                          ),\r\n-                                        ),\r\n-                                        child: Row(\r\n-                                          mainAxisAlignment:\r\n-                                              MainAxisAlignment.center,\r\n-                                          children: [\r\n-                                            const Text(\r\n-                                              \"Swipe to Delete\",\r\n-                                              style: TextStyle(\r\n-                                                color: Colors.white,\r\n-                                                fontSize: 15,\r\n-                                              ),\r\n-                                            ),\r\n-                                            SizedBox(width: 10),\r\n-                                            const Icon(\r\n-                                              Icons.delete,\r\n-                                              color: Colors.white,\r\n-                                            ),\r\n-                                          ],\r\n-                                        ),\r\n-                                      ),\r\n-                                      confirmDismiss: (direction) {\r\n-                                        return showDialog(\r\n-                                          context: context,\r\n-                                          builder: (context) => AlertDialog(\r\n-                                            title: const Text(\"Are you sure?\"),\r\n-                                            content: const Text(\r\n-                                                \"Do you want to delete this product?\"),\r\n-                                            actions: [\r\n-                                              TextButton(\r\n-                                                onPressed: () {\r\n-                                                  Navigator.of(context)\r\n-                                                      .pop(true);\r\n-                                                },\r\n-                                                child: const Text(\"Yes\"),\r\n-                                              ),\r\n-                                              TextButton(\r\n-                                                onPressed: () {\r\n-                                                  Navigator.of(context)\r\n-                                                      .pop(false);\r\n-                                                },\r\n-                                                child: const Text(\"No\"),\r\n-                                              ),\r\n-                                            ],\r\n-                                          ),\r\n-                                        );\r\n-                                      },\r\n-                                      onDismissed: (direction) {\r\n-                                        context\r\n-                                            .read<GtinCubit>()\r\n-                                            .deleteGtinProductById(\r\n-                                                productsFiltered[index].id ??\r\n-                                                    \"\");\r\n-                                      },\r\n-                                      child: ListTile(\r\n-                                        contentPadding:\r\n-                                            const EdgeInsets.all(10),\r\n-                                        title: Text(\r\n-                                          productsFiltered[index]\r\n-                                                  .productnameenglish ??\r\n-                                              \"\",\r\n-                                          style: const TextStyle(\r\n-                                            fontSize: 14,\r\n-                                            fontWeight: FontWeight.bold,\r\n-                                          ),\r\n-                                        ),\r\n-                                        subtitle: Text(\r\n-                                          productsFiltered[index].barcode ?? \"\",\r\n-                                          style: const TextStyle(fontSize: 12),\r\n-                                        ),\r\n-                                        leading: Hero(\r\n-                                          tag: productsFiltered[index].id ?? \"\",\r\n-                                          child: ClipOval(\r\n-                                            child: CachedNetworkImage(\r\n-                                              imageUrl: productsFiltered[index]\r\n-                                                          .frontImage ==\r\n-                                                      null\r\n-                                                  ? \"https://img.freepik.com/free-psd/3d-illustration-human-avatar-profile_23-2150671116.jpg?w=740&t=st=1715954816~exp=1715955416~hmac=b32613f5083d999009d81a82df971a4351afdc2a8725f2053bfa1a4af896d072\"\r\n-                                                  : \"${AppUrls.baseUrlWith3093}${productsFiltered[index].frontImage?.replaceAll(RegExp(r'^/+|/+$'), '').replaceAll(\"\\\\\", \"/\")}\",\r\n-                                              width: 50,\r\n-                                              height: 50,\r\n-                                              fit: BoxFit.cover,\r\n-                                              errorWidget:\r\n-                                                  (context, url, error) =>\r\n-                                                      const Icon(\r\n-                                                          Icons.image_outlined),\r\n-                                            ),\r\n-                                          ),\r\n-                                        ),\r\n-                                        trailing: GestureDetector(\r\n-                                          onTap: () {\r\n-                                            AppNavigator.goToPage(\r\n-                                              context: context,\r\n-                                              screen: GTINInformationScreen(\r\n-                                                employees:\r\n-                                                    productsFiltered[index],\r\n-                                              ),\r\n-                                            );\r\n-                                          },\r\n-                                          child: Image.asset(\r\n-                                              \"assets/icons/view.png\"),\r\n-                                        ),\r\n-                                        onTap: () {},\r\n-                                      ),\r\n-                                    ),\r\n-                                  );\r\n-                                },\r\n-                              ),\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                ],\r\n-              ),\r\n-            );\r\n-          },\r\n-        ),\r\n-      ),\r\n-    );\r\n-  }\r\n-\r\n-  Widget _buildSustainabilityTab() {\r\n-    return const SustainabilityInfoTab();\r\n-  }\r\n-}\r\n+//   @override\r\n+//   Widget build(BuildContext context) {\r\n+//     return Scaffold(\r\n+//       appBar: AppBar(\r\n+//         title: const Text('GTIN'),\r\n+//         backgroundColor: AppColors.skyBlue,\r\n+//       ),\r\n+//       body: SafeArea(\r\n+//         child: BlocConsumer<GtinCubit, GtinState>(\r\n+//           listener: (context, state) {\r\n+//             if (state is GtinLoadedState) {\r\n+//               products = state.data;\r\n+//               productsFiltered = state.data;\r\n+//             } else if (state is GtinDeleteProductLoadedState) {\r\n+//               AppSnackbars.success(context, \"Product Successfully Deleted\", 2);\r\n+//               context.read<GtinCubit>().getGtinData();\r\n+//             } else if (state is GtinErrorState) {\r\n+//               AppSnackbars.danger(context, state.message);\r\n+//             }\r\n+//           },\r\n+//           builder: (context, state) {\r\n+//             if (state is GtinLoadingState) {\r\n+//               Shimmer.fromColors(\r\n+//                 baseColor: Colors.grey[300]!,\r\n+//                 highlightColor: Colors.grey[100]!,\r\n+//                 child: ListView.builder(\r\n+//                   itemCount: 10,\r\n+//                   itemBuilder: (context, index) {\r\n+//                     return ListTile(\r\n+//                       leading: const CircleAvatar(\r\n+//                         radius: 30,\r\n+//                         backgroundColor: Colors.white,\r\n+//                       ),\r\n+//                       title: Container(\r\n+//                         width: 100,\r\n+//                         height: 20,\r\n+//                         color: Colors.white,\r\n+//                       ),\r\n+//                       subtitle: Container(\r\n+//                         width: 100,\r\n+//                         height: 20,\r\n+//                         color: Colors.white,\r\n+//                       ),\r\n+//                     );\r\n+//                   },\r\n+//                 ),\r\n+//               );\r\n+//             }\r\n+//             // else if (state is GtinErrorState) {\r\n+//             //   return Center(\r\n+//             //     child: Text(state.message),\r\n+//             //   );\r\n+//             // }\r\n+//             return Padding(\r\n+//               padding: const EdgeInsets.all(8.0),\r\n+//               child: Column(\r\n+//                 crossAxisAlignment: CrossAxisAlignment.start,\r\n+//                 children: [\r\n+//                   Row(\r\n+//                     mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n+//                     children: [\r\n+//                       Column(\r\n+//                         crossAxisAlignment: CrossAxisAlignment.start,\r\n+//                         children: [\r\n+//                           const Text(\r\n+//                             \"Member ID\",\r\n+//                             style: TextStyle(\r\n+//                               fontSize: 14,\r\n+//                             ),\r\n+//                           ),\r\n+//                           Text(\r\n+//                             userId ?? \"\",\r\n+//                             style: const TextStyle(\r\n+//                               fontWeight: FontWeight.bold,\r\n+//                               fontSize: 16,\r\n+//                             ),\r\n+//                           ),\r\n+//                         ],\r\n+//                       ),\r\n+//                       Column(\r\n+//                         crossAxisAlignment: CrossAxisAlignment.start,\r\n+//                         children: [\r\n+//                           const Text(\r\n+//                             \"GCP\",\r\n+//                             style: TextStyle(\r\n+//                               fontSize: 14,\r\n+//                             ),\r\n+//                           ),\r\n+//                           Text(\r\n+//                             gcp ?? \"\",\r\n+//                             style: const TextStyle(\r\n+//                               fontWeight: FontWeight.bold,\r\n+//                               fontSize: 16,\r\n+//                             ),\r\n+//                           ),\r\n+//                         ],\r\n+//                       ),\r\n+//                     ],\r\n+//                   ),\r\n+//                   const SizedBox(height: 20),\r\n+//                   Row(\r\n+//                     mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n+//                     children: [\r\n+//                       Column(\r\n+//                         crossAxisAlignment: CrossAxisAlignment.start,\r\n+//                         children: [\r\n+//                           const Text(\r\n+//                             \"Total Products\",\r\n+//                             style: TextStyle(\r\n+//                               fontSize: 14,\r\n+//                             ),\r\n+//                           ),\r\n+//                           Text(\r\n+//                             productsFiltered.length.toString(),\r\n+//                             style: const TextStyle(\r\n+//                               fontWeight: FontWeight.bold,\r\n+//                               fontSize: 16,\r\n+//                             ),\r\n+//                           ),\r\n+//                         ],\r\n+//                       ),\r\n+//                       Column(\r\n+//                         crossAxisAlignment: CrossAxisAlignment.start,\r\n+//                         children: [\r\n+//                           const Text(\r\n+//                             \"Category C\",\r\n+//                             style: TextStyle(\r\n+//                               fontSize: 14,\r\n+//                             ),\r\n+//                           ),\r\n+//                           Text(\r\n+//                             memberCategoryDescription?.replaceAll(\r\n+//                                     \"Category C\", \"\") ??\r\n+//                                 \"\",\r\n+//                             overflow: TextOverflow.ellipsis,\r\n+//                             style: const TextStyle(\r\n+//                               fontWeight: FontWeight.bold,\r\n+//                               fontSize: 15,\r\n+//                             ),\r\n+//                           ),\r\n+//                         ],\r\n+//                       ),\r\n+//                     ],\r\n+//                   ),\r\n+//                   const SizedBox(height: 10),\r\n+//                   Row(\r\n+//                     mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n+//                     children: [\r\n+//                       GestureDetector(\r\n+//                         onTap: () {\r\n+//                           AppNavigator.goToPage(\r\n+//                             context: context,\r\n+//                             screen: const AddGtinScreen(),\r\n+//                           );\r\n+//                         },\r\n+//                         child: Container(\r\n+//                           width: 100,\r\n+//                           height: 40,\r\n+//                           decoration: BoxDecoration(\r\n+//                             color: Colors.grey[200],\r\n+//                             borderRadius: BorderRadius.circular(50),\r\n+//                           ),\r\n+//                           child: Row(\r\n+//                             mainAxisAlignment: MainAxisAlignment.center,\r\n+//                             children: [\r\n+//                               Image.asset(\r\n+//                                 'assets/icons/add_Icon.png',\r\n+//                                 width: 20,\r\n+//                                 height: 20,\r\n+//                               ),\r\n+//                               const SizedBox(width: 5),\r\n+//                               Text(\r\n+//                                 'Add',\r\n+//                                 style: TextStyle(\r\n+//                                   color: Colors.green[700],\r\n+//                                   fontWeight: FontWeight.bold,\r\n+//                                 ),\r\n+//                               ),\r\n+//                             ],\r\n+//                           ),\r\n+//                         ),\r\n+//                       ),\r\n+//                       SizedBox(width: 10),\r\n+//                       Expanded(\r\n+//                         child: TextField(\r\n+//                           controller: searchController,\r\n+//                           onChanged: (value) {\r\n+//                             if (value.isNotEmpty) {\r\n+//                               setState(() {\r\n+//                                 productsFiltered = products\r\n+//                                     .where((element) => element.barcode\r\n+//                                         .toString()\r\n+//                                         .toLowerCase()\r\n+//                                         .contains(value.toLowerCase()))\r\n+//                                     .toList();\r\n+//                               });\r\n+//                             } else {\r\n+//                               setState(() {\r\n+//                                 productsFiltered = products;\r\n+//                               });\r\n+//                             }\r\n+//                           },\r\n+//                           decoration: const InputDecoration(\r\n+//                             suffixIcon: Icon(Ionicons.search_outline),\r\n+//                           ),\r\n+//                         ),\r\n+//                       ),\r\n+//                     ],\r\n+//                   ),\r\n+//                   const SizedBox(height: 20),\r\n+//                   const Padding(\r\n+//                     padding: EdgeInsets.only(left: 20.0, right: 20.0),\r\n+//                     child: Row(\r\n+//                       mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+//                       children: [\r\n+//                         Text(\r\n+//                           \"GTIN List\",\r\n+//                           style: TextStyle(fontSize: 18),\r\n+//                         ),\r\n+//                         Icon(\r\n+//                           Ionicons.filter_outline,\r\n+//                           size: 30,\r\n+//                         ),\r\n+//                       ],\r\n+//                     ),\r\n+//                   ),\r\n+//                   const SizedBox(height: 10),\r\n+//                   state is GtinLoadingState\r\n+//                       ? Expanded(\r\n+//                           child: Shimmer.fromColors(\r\n+//                             baseColor: AppColors.grey,\r\n+//                             highlightColor: AppColors.white,\r\n+//                             child: Container(\r\n+//                               height: 350,\r\n+//                               width: MediaQuery.of(context).size.width,\r\n+//                               margin: const EdgeInsets.symmetric(\r\n+//                                   horizontal: 5, vertical: 5),\r\n+//                               decoration: BoxDecoration(\r\n+//                                 borderRadius: BorderRadius.circular(20),\r\n+//                                 border: Border.all(\r\n+//                                   color: AppColors.grey,\r\n+//                                   width: 1,\r\n+//                                 ),\r\n+//                                 color: Colors.black38,\r\n+//                               ),\r\n+//                             ),\r\n+//                           ),\r\n+//                         )\r\n+//                       : Expanded(\r\n+//                           child: Container(\r\n+//                             // border\r\n+//                             decoration: BoxDecoration(\r\n+//                               border: Border.all(color: Colors.grey),\r\n+//                               borderRadius: BorderRadius.circular(10),\r\n+//                             ),\r\n+//                             child: RefreshIndicator(\r\n+//                               onRefresh: () async {\r\n+//                                 context.read<GtinCubit>().getGtinData();\r\n+//                               },\r\n+//                               child: ListView.builder(\r\n+//                                 itemCount: productsFiltered.length,\r\n+//                                 shrinkWrap: true,\r\n+//                                 physics: const BouncingScrollPhysics(),\r\n+//                                 itemBuilder: (context, index) {\r\n+//                                   return Container(\r\n+//                                     width:\r\n+//                                         MediaQuery.of(context).size.width * 0.9,\r\n+//                                     alignment: Alignment.center,\r\n+//                                     margin: const EdgeInsets.symmetric(\r\n+//                                       horizontal: 20,\r\n+//                                       vertical: 10,\r\n+//                                     ),\r\n+//                                     decoration: BoxDecoration(\r\n+//                                       color: Colors.white,\r\n+//                                       borderRadius: BorderRadius.circular(10),\r\n+//                                       boxShadow: [\r\n+//                                         BoxShadow(\r\n+//                                           color: Colors.grey.withOpacity(0.5),\r\n+//                                           spreadRadius: 5,\r\n+//                                           blurRadius: 7,\r\n+//                                           offset: const Offset(0, 3),\r\n+//                                         ),\r\n+//                                       ],\r\n+//                                       border: Border.all(\r\n+//                                           color: Colors.grey.withOpacity(0.2)),\r\n+//                                     ),\r\n+//                                     child: Dismissible(\r\n+//                                       key: UniqueKey(),\r\n+//                                       direction: DismissDirection.endToStart,\r\n+//                                       movementDuration:\r\n+//                                           const Duration(seconds: 1),\r\n+//                                       secondaryBackground: Container(\r\n+//                                         decoration: const BoxDecoration(\r\n+//                                           color: Colors.red,\r\n+//                                           borderRadius: BorderRadius.only(\r\n+//                                             topRight: Radius.circular(10),\r\n+//                                             bottomRight: Radius.circular(10),\r\n+//                                           ),\r\n+//                                         ),\r\n+//                                         child: Row(\r\n+//                                           mainAxisAlignment:\r\n+//                                               MainAxisAlignment.center,\r\n+//                                           children: [\r\n+//                                             const Text(\r\n+//                                               \"Swipe to Delete\",\r\n+//                                               style: TextStyle(\r\n+//                                                 color: Colors.white,\r\n+//                                                 fontSize: 15,\r\n+//                                               ),\r\n+//                                             ),\r\n+//                                             SizedBox(width: 10),\r\n+//                                             const Icon(\r\n+//                                               Icons.delete,\r\n+//                                               color: Colors.white,\r\n+//                                             ),\r\n+//                                           ],\r\n+//                                         ),\r\n+//                                       ),\r\n+//                                       background: Container(\r\n+//                                         decoration: const BoxDecoration(\r\n+//                                           color: Colors.red,\r\n+//                                           borderRadius: BorderRadius.only(\r\n+//                                             topLeft: Radius.circular(10),\r\n+//                                             bottomLeft: Radius.circular(10),\r\n+//                                           ),\r\n+//                                         ),\r\n+//                                         child: Row(\r\n+//                                           mainAxisAlignment:\r\n+//                                               MainAxisAlignment.center,\r\n+//                                           children: [\r\n+//                                             const Text(\r\n+//                                               \"Swipe to Delete\",\r\n+//                                               style: TextStyle(\r\n+//                                                 color: Colors.white,\r\n+//                                                 fontSize: 15,\r\n+//                                               ),\r\n+//                                             ),\r\n+//                                             SizedBox(width: 10),\r\n+//                                             const Icon(\r\n+//                                               Icons.delete,\r\n+//                                               color: Colors.white,\r\n+//                                             ),\r\n+//                                           ],\r\n+//                                         ),\r\n+//                                       ),\r\n+//                                       confirmDismiss: (direction) {\r\n+//                                         return showDialog(\r\n+//                                           context: context,\r\n+//                                           builder: (context) => AlertDialog(\r\n+//                                             title: const Text(\"Are you sure?\"),\r\n+//                                             content: const Text(\r\n+//                                                 \"Do you want to delete this product?\"),\r\n+//                                             actions: [\r\n+//                                               TextButton(\r\n+//                                                 onPressed: () {\r\n+//                                                   Navigator.of(context)\r\n+//                                                       .pop(true);\r\n+//                                                 },\r\n+//                                                 child: const Text(\"Yes\"),\r\n+//                                               ),\r\n+//                                               TextButton(\r\n+//                                                 onPressed: () {\r\n+//                                                   Navigator.of(context)\r\n+//                                                       .pop(false);\r\n+//                                                 },\r\n+//                                                 child: const Text(\"No\"),\r\n+//                                               ),\r\n+//                                             ],\r\n+//                                           ),\r\n+//                                         );\r\n+//                                       },\r\n+//                                       onDismissed: (direction) {\r\n+//                                         context\r\n+//                                             .read<GtinCubit>()\r\n+//                                             .deleteGtinProductById(\r\n+//                                                 productsFiltered[index].id ??\r\n+//                                                     \"\");\r\n+//                                       },\r\n+//                                       child: ListTile(\r\n+//                                         contentPadding:\r\n+//                                             const EdgeInsets.all(10),\r\n+//                                         title: Text(\r\n+//                                           productsFiltered[index]\r\n+//                                                   .productnameenglish ??\r\n+//                                               \"\",\r\n+//                                           style: const TextStyle(\r\n+//                                             fontSize: 14,\r\n+//                                             fontWeight: FontWeight.bold,\r\n+//                                           ),\r\n+//                                         ),\r\n+//                                         subtitle: Text(\r\n+//                                           productsFiltered[index].barcode ?? \"\",\r\n+//                                           style: const TextStyle(fontSize: 12),\r\n+//                                         ),\r\n+//                                         leading: Hero(\r\n+//                                           tag: productsFiltered[index].id ?? \"\",\r\n+//                                           child: ClipOval(\r\n+//                                             child: CachedNetworkImage(\r\n+//                                               imageUrl: productsFiltered[index]\r\n+//                                                           .frontImage ==\r\n+//                                                       null\r\n+//                                                   ? \"https://img.freepik.com/free-psd/3d-illustration-human-avatar-profile_23-2150671116.jpg?w=740&t=st=1715954816~exp=1715955416~hmac=b32613f5083d999009d81a82df971a4351afdc2a8725f2053bfa1a4af896d072\"\r\n+//                                                   : \"${AppUrls.baseUrlWith3093}${productsFiltered[index].frontImage?.replaceAll(RegExp(r'^/+|/+$'), '').replaceAll(\"\\\\\", \"/\")}\",\r\n+//                                               width: 50,\r\n+//                                               height: 50,\r\n+//                                               fit: BoxFit.cover,\r\n+//                                               errorWidget:\r\n+//                                                   (context, url, error) =>\r\n+//                                                       const Icon(\r\n+//                                                           Icons.image_outlined),\r\n+//                                             ),\r\n+//                                           ),\r\n+//                                         ),\r\n+//                                         trailing: GestureDetector(\r\n+//                                           onTap: () {\r\n+//                                             AppNavigator.goToPage(\r\n+//                                               context: context,\r\n+//                                               screen: GTINInformationScreen(\r\n+//                                                 employees:\r\n+//                                                     productsFiltered[index],\r\n+//                                               ),\r\n+//                                             );\r\n+//                                           },\r\n+//                                           child: Image.asset(\r\n+//                                               \"assets/icons/view.png\"),\r\n+//                                         ),\r\n+//                                         onTap: () {},\r\n+//                                       ),\r\n+//                                     ),\r\n+//                                   );\r\n+//                                 },\r\n+//                               ),\r\n+//                             ),\r\n+//                           ),\r\n+//                         ),\r\n+//                 ],\r\n+//               ),\r\n+//             );\r\n+//           },\r\n+//         ),\r\n+//       ),\r\n+//     );\r\n+//   }\r\n+// }\r\n"
                }
            ],
            "date": 1750932456994,
            "name": "Commit-0",
            "content": "// import 'package:cached_network_image/cached_network_image.dart';\r\n// import 'package:flutter/material.dart';\r\n// import 'package:flutter_bloc/flutter_bloc.dart';\r\n// import 'package:gtrack_nartec/blocs/Identify/gtin/gtin_cubit.dart';\r\n// import 'package:gtrack_nartec/blocs/Identify/gtin/gtin_states.dart';\r\n// import 'package:gtrack_nartec/constants/app_preferences.dart';\r\n// import 'package:gtrack_nartec/constants/app_urls.dart';\r\n// import 'package:gtrack_nartec/global/common/colors/app_colors.dart';\r\n// import 'package:gtrack_nartec/global/common/utils/app_navigator.dart';\r\n// import 'package:gtrack_nartec/global/common/utils/app_snakbars.dart';\r\n// import 'package:gtrack_nartec/models/IDENTIFY/GTIN/GTINModel.dart';\r\n// import 'package:gtrack_nartec/screens/home/identify/GTIN/add_gtin_screen.dart';\r\n// import 'package:gtrack_nartec/screens/home/identify/GTIN/gtin_information_screen.dart';\r\n// import 'package:ionicons/ionicons.dart';\r\n// import 'package:shimmer/shimmer.dart';\r\n\r\n// class GTINScreen extends StatefulWidget {\r\n//   const GTINScreen({super.key});\r\n\r\n//   @override\r\n//   State<GTINScreen> createState() => _GTINScreenState();\r\n// }\r\n\r\n// class _GTINScreenState extends State<GTINScreen> {\r\n//   TextEditingController searchController = TextEditingController();\r\n\r\n//   List<GTIN_Model> products = [];\r\n//   List<GTIN_Model> productsFiltered = [];\r\n\r\n//   String? userId, gcp, memberCategoryDescription;\r\n//   @override\r\n//   void initState() {\r\n//     AppPreferences.getMemberId().then((value) => userId = value);\r\n//     AppPreferences.getGcp().then((value) => gcp = value);\r\n//     AppPreferences.getMemberCategoryDescription()\r\n//         .then((value) => memberCategoryDescription = value);\r\n//     context.read<GtinCubit>().getGtinData();\r\n//     super.initState();\r\n//   }\r\n\r\n//   @override\r\n//   Widget build(BuildContext context) {\r\n//     return Scaffold(\r\n//       appBar: AppBar(\r\n//         title: const Text('GTIN'),\r\n//         backgroundColor: AppColors.skyBlue,\r\n//       ),\r\n//       body: SafeArea(\r\n//         child: BlocConsumer<GtinCubit, GtinState>(\r\n//           listener: (context, state) {\r\n//             if (state is GtinLoadedState) {\r\n//               products = state.data;\r\n//               productsFiltered = state.data;\r\n//             } else if (state is GtinDeleteProductLoadedState) {\r\n//               AppSnackbars.success(context, \"Product Successfully Deleted\", 2);\r\n//               context.read<GtinCubit>().getGtinData();\r\n//             } else if (state is GtinErrorState) {\r\n//               AppSnackbars.danger(context, state.message);\r\n//             }\r\n//           },\r\n//           builder: (context, state) {\r\n//             if (state is GtinLoadingState) {\r\n//               Shimmer.fromColors(\r\n//                 baseColor: Colors.grey[300]!,\r\n//                 highlightColor: Colors.grey[100]!,\r\n//                 child: ListView.builder(\r\n//                   itemCount: 10,\r\n//                   itemBuilder: (context, index) {\r\n//                     return ListTile(\r\n//                       leading: const CircleAvatar(\r\n//                         radius: 30,\r\n//                         backgroundColor: Colors.white,\r\n//                       ),\r\n//                       title: Container(\r\n//                         width: 100,\r\n//                         height: 20,\r\n//                         color: Colors.white,\r\n//                       ),\r\n//                       subtitle: Container(\r\n//                         width: 100,\r\n//                         height: 20,\r\n//                         color: Colors.white,\r\n//                       ),\r\n//                     );\r\n//                   },\r\n//                 ),\r\n//               );\r\n//             }\r\n//             // else if (state is GtinErrorState) {\r\n//             //   return Center(\r\n//             //     child: Text(state.message),\r\n//             //   );\r\n//             // }\r\n//             return Padding(\r\n//               padding: const EdgeInsets.all(8.0),\r\n//               child: Column(\r\n//                 crossAxisAlignment: CrossAxisAlignment.start,\r\n//                 children: [\r\n//                   Row(\r\n//                     mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n//                     children: [\r\n//                       Column(\r\n//                         crossAxisAlignment: CrossAxisAlignment.start,\r\n//                         children: [\r\n//                           const Text(\r\n//                             \"Member ID\",\r\n//                             style: TextStyle(\r\n//                               fontSize: 14,\r\n//                             ),\r\n//                           ),\r\n//                           Text(\r\n//                             userId ?? \"\",\r\n//                             style: const TextStyle(\r\n//                               fontWeight: FontWeight.bold,\r\n//                               fontSize: 16,\r\n//                             ),\r\n//                           ),\r\n//                         ],\r\n//                       ),\r\n//                       Column(\r\n//                         crossAxisAlignment: CrossAxisAlignment.start,\r\n//                         children: [\r\n//                           const Text(\r\n//                             \"GCP\",\r\n//                             style: TextStyle(\r\n//                               fontSize: 14,\r\n//                             ),\r\n//                           ),\r\n//                           Text(\r\n//                             gcp ?? \"\",\r\n//                             style: const TextStyle(\r\n//                               fontWeight: FontWeight.bold,\r\n//                               fontSize: 16,\r\n//                             ),\r\n//                           ),\r\n//                         ],\r\n//                       ),\r\n//                     ],\r\n//                   ),\r\n//                   const SizedBox(height: 20),\r\n//                   Row(\r\n//                     mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n//                     children: [\r\n//                       Column(\r\n//                         crossAxisAlignment: CrossAxisAlignment.start,\r\n//                         children: [\r\n//                           const Text(\r\n//                             \"Total Products\",\r\n//                             style: TextStyle(\r\n//                               fontSize: 14,\r\n//                             ),\r\n//                           ),\r\n//                           Text(\r\n//                             productsFiltered.length.toString(),\r\n//                             style: const TextStyle(\r\n//                               fontWeight: FontWeight.bold,\r\n//                               fontSize: 16,\r\n//                             ),\r\n//                           ),\r\n//                         ],\r\n//                       ),\r\n//                       Column(\r\n//                         crossAxisAlignment: CrossAxisAlignment.start,\r\n//                         children: [\r\n//                           const Text(\r\n//                             \"Category C\",\r\n//                             style: TextStyle(\r\n//                               fontSize: 14,\r\n//                             ),\r\n//                           ),\r\n//                           Text(\r\n//                             memberCategoryDescription?.replaceAll(\r\n//                                     \"Category C\", \"\") ??\r\n//                                 \"\",\r\n//                             overflow: TextOverflow.ellipsis,\r\n//                             style: const TextStyle(\r\n//                               fontWeight: FontWeight.bold,\r\n//                               fontSize: 15,\r\n//                             ),\r\n//                           ),\r\n//                         ],\r\n//                       ),\r\n//                     ],\r\n//                   ),\r\n//                   const SizedBox(height: 10),\r\n//                   Row(\r\n//                     mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n//                     children: [\r\n//                       GestureDetector(\r\n//                         onTap: () {\r\n//                           AppNavigator.goToPage(\r\n//                             context: context,\r\n//                             screen: const AddGtinScreen(),\r\n//                           );\r\n//                         },\r\n//                         child: Container(\r\n//                           width: 100,\r\n//                           height: 40,\r\n//                           decoration: BoxDecoration(\r\n//                             color: Colors.grey[200],\r\n//                             borderRadius: BorderRadius.circular(50),\r\n//                           ),\r\n//                           child: Row(\r\n//                             mainAxisAlignment: MainAxisAlignment.center,\r\n//                             children: [\r\n//                               Image.asset(\r\n//                                 'assets/icons/add_Icon.png',\r\n//                                 width: 20,\r\n//                                 height: 20,\r\n//                               ),\r\n//                               const SizedBox(width: 5),\r\n//                               Text(\r\n//                                 'Add',\r\n//                                 style: TextStyle(\r\n//                                   color: Colors.green[700],\r\n//                                   fontWeight: FontWeight.bold,\r\n//                                 ),\r\n//                               ),\r\n//                             ],\r\n//                           ),\r\n//                         ),\r\n//                       ),\r\n//                       SizedBox(width: 10),\r\n//                       Expanded(\r\n//                         child: TextField(\r\n//                           controller: searchController,\r\n//                           onChanged: (value) {\r\n//                             if (value.isNotEmpty) {\r\n//                               setState(() {\r\n//                                 productsFiltered = products\r\n//                                     .where((element) => element.barcode\r\n//                                         .toString()\r\n//                                         .toLowerCase()\r\n//                                         .contains(value.toLowerCase()))\r\n//                                     .toList();\r\n//                               });\r\n//                             } else {\r\n//                               setState(() {\r\n//                                 productsFiltered = products;\r\n//                               });\r\n//                             }\r\n//                           },\r\n//                           decoration: const InputDecoration(\r\n//                             suffixIcon: Icon(Ionicons.search_outline),\r\n//                           ),\r\n//                         ),\r\n//                       ),\r\n//                     ],\r\n//                   ),\r\n//                   const SizedBox(height: 20),\r\n//                   const Padding(\r\n//                     padding: EdgeInsets.only(left: 20.0, right: 20.0),\r\n//                     child: Row(\r\n//                       mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n//                       children: [\r\n//                         Text(\r\n//                           \"GTIN List\",\r\n//                           style: TextStyle(fontSize: 18),\r\n//                         ),\r\n//                         Icon(\r\n//                           Ionicons.filter_outline,\r\n//                           size: 30,\r\n//                         ),\r\n//                       ],\r\n//                     ),\r\n//                   ),\r\n//                   const SizedBox(height: 10),\r\n//                   state is GtinLoadingState\r\n//                       ? Expanded(\r\n//                           child: Shimmer.fromColors(\r\n//                             baseColor: AppColors.grey,\r\n//                             highlightColor: AppColors.white,\r\n//                             child: Container(\r\n//                               height: 350,\r\n//                               width: MediaQuery.of(context).size.width,\r\n//                               margin: const EdgeInsets.symmetric(\r\n//                                   horizontal: 5, vertical: 5),\r\n//                               decoration: BoxDecoration(\r\n//                                 borderRadius: BorderRadius.circular(20),\r\n//                                 border: Border.all(\r\n//                                   color: AppColors.grey,\r\n//                                   width: 1,\r\n//                                 ),\r\n//                                 color: Colors.black38,\r\n//                               ),\r\n//                             ),\r\n//                           ),\r\n//                         )\r\n//                       : Expanded(\r\n//                           child: Container(\r\n//                             // border\r\n//                             decoration: BoxDecoration(\r\n//                               border: Border.all(color: Colors.grey),\r\n//                               borderRadius: BorderRadius.circular(10),\r\n//                             ),\r\n//                             child: RefreshIndicator(\r\n//                               onRefresh: () async {\r\n//                                 context.read<GtinCubit>().getGtinData();\r\n//                               },\r\n//                               child: ListView.builder(\r\n//                                 itemCount: productsFiltered.length,\r\n//                                 shrinkWrap: true,\r\n//                                 physics: const BouncingScrollPhysics(),\r\n//                                 itemBuilder: (context, index) {\r\n//                                   return Container(\r\n//                                     width:\r\n//                                         MediaQuery.of(context).size.width * 0.9,\r\n//                                     alignment: Alignment.center,\r\n//                                     margin: const EdgeInsets.symmetric(\r\n//                                       horizontal: 20,\r\n//                                       vertical: 10,\r\n//                                     ),\r\n//                                     decoration: BoxDecoration(\r\n//                                       color: Colors.white,\r\n//                                       borderRadius: BorderRadius.circular(10),\r\n//                                       boxShadow: [\r\n//                                         BoxShadow(\r\n//                                           color: Colors.grey.withOpacity(0.5),\r\n//                                           spreadRadius: 5,\r\n//                                           blurRadius: 7,\r\n//                                           offset: const Offset(0, 3),\r\n//                                         ),\r\n//                                       ],\r\n//                                       border: Border.all(\r\n//                                           color: Colors.grey.withOpacity(0.2)),\r\n//                                     ),\r\n//                                     child: Dismissible(\r\n//                                       key: UniqueKey(),\r\n//                                       direction: DismissDirection.endToStart,\r\n//                                       movementDuration:\r\n//                                           const Duration(seconds: 1),\r\n//                                       secondaryBackground: Container(\r\n//                                         decoration: const BoxDecoration(\r\n//                                           color: Colors.red,\r\n//                                           borderRadius: BorderRadius.only(\r\n//                                             topRight: Radius.circular(10),\r\n//                                             bottomRight: Radius.circular(10),\r\n//                                           ),\r\n//                                         ),\r\n//                                         child: Row(\r\n//                                           mainAxisAlignment:\r\n//                                               MainAxisAlignment.center,\r\n//                                           children: [\r\n//                                             const Text(\r\n//                                               \"Swipe to Delete\",\r\n//                                               style: TextStyle(\r\n//                                                 color: Colors.white,\r\n//                                                 fontSize: 15,\r\n//                                               ),\r\n//                                             ),\r\n//                                             SizedBox(width: 10),\r\n//                                             const Icon(\r\n//                                               Icons.delete,\r\n//                                               color: Colors.white,\r\n//                                             ),\r\n//                                           ],\r\n//                                         ),\r\n//                                       ),\r\n//                                       background: Container(\r\n//                                         decoration: const BoxDecoration(\r\n//                                           color: Colors.red,\r\n//                                           borderRadius: BorderRadius.only(\r\n//                                             topLeft: Radius.circular(10),\r\n//                                             bottomLeft: Radius.circular(10),\r\n//                                           ),\r\n//                                         ),\r\n//                                         child: Row(\r\n//                                           mainAxisAlignment:\r\n//                                               MainAxisAlignment.center,\r\n//                                           children: [\r\n//                                             const Text(\r\n//                                               \"Swipe to Delete\",\r\n//                                               style: TextStyle(\r\n//                                                 color: Colors.white,\r\n//                                                 fontSize: 15,\r\n//                                               ),\r\n//                                             ),\r\n//                                             SizedBox(width: 10),\r\n//                                             const Icon(\r\n//                                               Icons.delete,\r\n//                                               color: Colors.white,\r\n//                                             ),\r\n//                                           ],\r\n//                                         ),\r\n//                                       ),\r\n//                                       confirmDismiss: (direction) {\r\n//                                         return showDialog(\r\n//                                           context: context,\r\n//                                           builder: (context) => AlertDialog(\r\n//                                             title: const Text(\"Are you sure?\"),\r\n//                                             content: const Text(\r\n//                                                 \"Do you want to delete this product?\"),\r\n//                                             actions: [\r\n//                                               TextButton(\r\n//                                                 onPressed: () {\r\n//                                                   Navigator.of(context)\r\n//                                                       .pop(true);\r\n//                                                 },\r\n//                                                 child: const Text(\"Yes\"),\r\n//                                               ),\r\n//                                               TextButton(\r\n//                                                 onPressed: () {\r\n//                                                   Navigator.of(context)\r\n//                                                       .pop(false);\r\n//                                                 },\r\n//                                                 child: const Text(\"No\"),\r\n//                                               ),\r\n//                                             ],\r\n//                                           ),\r\n//                                         );\r\n//                                       },\r\n//                                       onDismissed: (direction) {\r\n//                                         context\r\n//                                             .read<GtinCubit>()\r\n//                                             .deleteGtinProductById(\r\n//                                                 productsFiltered[index].id ??\r\n//                                                     \"\");\r\n//                                       },\r\n//                                       child: ListTile(\r\n//                                         contentPadding:\r\n//                                             const EdgeInsets.all(10),\r\n//                                         title: Text(\r\n//                                           productsFiltered[index]\r\n//                                                   .productnameenglish ??\r\n//                                               \"\",\r\n//                                           style: const TextStyle(\r\n//                                             fontSize: 14,\r\n//                                             fontWeight: FontWeight.bold,\r\n//                                           ),\r\n//                                         ),\r\n//                                         subtitle: Text(\r\n//                                           productsFiltered[index].barcode ?? \"\",\r\n//                                           style: const TextStyle(fontSize: 12),\r\n//                                         ),\r\n//                                         leading: Hero(\r\n//                                           tag: productsFiltered[index].id ?? \"\",\r\n//                                           child: ClipOval(\r\n//                                             child: CachedNetworkImage(\r\n//                                               imageUrl: productsFiltered[index]\r\n//                                                           .frontImage ==\r\n//                                                       null\r\n//                                                   ? \"https://img.freepik.com/free-psd/3d-illustration-human-avatar-profile_23-2150671116.jpg?w=740&t=st=1715954816~exp=1715955416~hmac=b32613f5083d999009d81a82df971a4351afdc2a8725f2053bfa1a4af896d072\"\r\n//                                                   : \"${AppUrls.baseUrlWith3093}${productsFiltered[index].frontImage?.replaceAll(RegExp(r'^/+|/+$'), '').replaceAll(\"\\\\\", \"/\")}\",\r\n//                                               width: 50,\r\n//                                               height: 50,\r\n//                                               fit: BoxFit.cover,\r\n//                                               errorWidget:\r\n//                                                   (context, url, error) =>\r\n//                                                       const Icon(\r\n//                                                           Icons.image_outlined),\r\n//                                             ),\r\n//                                           ),\r\n//                                         ),\r\n//                                         trailing: GestureDetector(\r\n//                                           onTap: () {\r\n//                                             AppNavigator.goToPage(\r\n//                                               context: context,\r\n//                                               screen: GTINInformationScreen(\r\n//                                                 employees:\r\n//                                                     productsFiltered[index],\r\n//                                               ),\r\n//                                             );\r\n//                                           },\r\n//                                           child: Image.asset(\r\n//                                               \"assets/icons/view.png\"),\r\n//                                         ),\r\n//                                         onTap: () {},\r\n//                                       ),\r\n//                                     ),\r\n//                                   );\r\n//                                 },\r\n//                               ),\r\n//                             ),\r\n//                           ),\r\n//                         ),\r\n//                 ],\r\n//               ),\r\n//             );\r\n//           },\r\n//         ),\r\n//       ),\r\n//     );\r\n//   }\r\n\r\n//   Widget _buildSustainabilityTab() {\r\n//     return const SustainabilityInfoTab();\r\n//   }\r\n// }\r\n"
        }
    ]
}