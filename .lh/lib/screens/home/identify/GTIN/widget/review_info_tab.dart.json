{
    "sourceFile": "lib/screens/home/identify/GTIN/widget/review_info_tab.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1750931091911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1750931102716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,10 @@\n                                 fontWeight: FontWeight.w600,\n                               ),\n                             ),\n                             Container(\n-                              padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 4),\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 12, vertical: 4),\n                               decoration: BoxDecoration(\n                                 color: Colors.green,\n                                 borderRadius: BorderRadius.circular(20),\n                               ),\n@@ -108,9 +109,10 @@\n                         const SizedBox(height: 16),\n \n                         // Product name and rating\n                         Text(\n-                          _getValue('productName', 'SAMA OIL - PROMAX SP 0W16 API SP'),\n+                          _getValue('productName',\n+                              'SAMA OIL - PROMAX SP 0W16 API SP'),\n                           style: const TextStyle(\n                             fontSize: 16,\n                             fontWeight: FontWeight.bold,\n                             color: Colors.black,\n@@ -418,21 +420,25 @@\n                           style: pw.TextStyle(fontWeight: pw.FontWeight.bold),\n                         ),\n                         pw.SizedBox(height: 8),\n                         pw.Text(\n-                          _getValue('productName', 'SAMA OIL - PROMAX SP 0W16 API SP'),\n+                          _getValue('productName',\n+                              'SAMA OIL - PROMAX SP 0W16 API SP'),\n                           style: pw.TextStyle(\n                             fontSize: 16,\n                             fontWeight: pw.FontWeight.bold,\n                           ),\n                         ),\n                         pw.SizedBox(height: 8),\n-                        pw.Text('Rating: ${_getIntValue('rating', 4)} out of 5'),\n+                        pw.Text(\n+                            'Rating: ${_getIntValue('rating', 4)} out of 5'),\n                         pw.SizedBox(height: 8),\n                         pw.Text('\"${_getValue('comment', 'Good Product!')}\"'),\n                         pw.SizedBox(height: 8),\n-                        pw.Text('Reviewer ID: ${_getValue('reviewerId', 'cm5fhascy0003xv1q15p5e0vv')}'),\n-                        pw.Text('IP: ${_getValue('ipAddress', '37.217.253.64')}'),\n+                        pw.Text(\n+                            'Reviewer ID: ${_getValue('reviewerId', 'cm5fhascy0003xv1q15p5e0vv')}'),\n+                        pw.Text(\n+                            'IP: ${_getValue('ipAddress', '37.217.253.64')}'),\n                         pw.SizedBox(height: 8),\n                         pw.Text('GTIN: ${_getValue('gtin', '6285561000957')}'),\n                       ],\n                     ),\n@@ -444,15 +450,17 @@\n         ),\n       );\n \n       final directory = await getTemporaryDirectory();\n-      final fileName = 'review_info_${DateTime.now().millisecondsSinceEpoch}.pdf';\n+      final fileName =\n+          'review_info_${DateTime.now().millisecondsSinceEpoch}.pdf';\n       final file = File('${directory.path}/$fileName');\n \n       await file.writeAsBytes(await pdf.save());\n \n-      await Share.shareXFiles([XFile(file.path)], text: 'Review Information PDF');\n+      await Share.shareXFiles([XFile(file.path)],\n+          text: 'Review Information PDF');\n     } catch (e) {\n\\ No newline at end of file\n       print('Error generating PDF: $e');\n     }\n   }\n-}\n+}\n"
                },
                {
                    "date": 1750931506759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,25 +237,25 @@\n               ),\n             ),\n           ),\n \n-          // Action Buttons (outside RepaintBoundary, so they won't be captured)\n-          Padding(\n-            padding: const EdgeInsets.all(12),\n-            child: Wrap(\n-              spacing: 8,\n-              runSpacing: 8,\n-              alignment: WrapAlignment.center,\n-              children: [\n-                _buildActionButton(\n-                    'PNG', Colors.blue[900]!, () => _downloadAs('png')),\n-                _buildActionButton(\n-                    'JPG', Colors.blue[900]!, () => _downloadAs('jpg')),\n-                _buildActionButton(\n-                    'PDF', Colors.blue[900]!, () => _downloadAs('pdf')),\n-              ],\n-            ),\n-          ),\n+          // // Action Buttons (outside RepaintBoundary, so they won't be captured)\n+          // Padding(\n+          //   padding: const EdgeInsets.all(12),\n+          //   child: Wrap(\n+          //     spacing: 8,\n+          //     runSpacing: 8,\n+          //     alignment: WrapAlignment.center,\n+          //     children: [\n+          //       _buildActionButton(\n+          //           'PNG', Colors.blue[900]!, () => _downloadAs('png')),\n+          //       _buildActionButton(\n+          //           'JPG', Colors.blue[900]!, () => _downloadAs('jpg')),\n+          //       _buildActionButton(\n+          //           'PDF', Colors.blue[900]!, () => _downloadAs('pdf')),\n+          //     ],\n+          //   ),\n+          // ),\n         ],\n       ),\n     );\n   }\n"
                },
                {
                    "date": 1750931551797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n \n import 'package:flutter/material.dart';\n import 'package:flutter/rendering.dart';\n import 'package:flutter/services.dart';\n+import 'package:gtrack_nartec/models/IDENTIFY/GTIN/review_model.dart';\n import 'dart:ui' as ui;\n import 'dart:io';\n import 'package:path_provider/path_provider.dart';\n import 'package:share_plus/share_plus.dart';\n@@ -11,9 +12,9 @@\n import 'package:pdf/widgets.dart' as pw;\n import 'package:image/image.dart' as img;\n \n class ReviewCard extends StatelessWidget {\n-  final dynamic review; // Replace with your actual review model type\n+  final List<ReviewModel> review; // Replace with your actual review model type\n   final GlobalKey _cardKey = GlobalKey();\n \n   ReviewCard({super.key, required this.review});\n \n"
                },
                {
                    "date": 1750931586130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import 'package:pdf/widgets.dart' as pw;\n import 'package:image/image.dart' as img;\n \n class ReviewCard extends StatelessWidget {\n-  final List<ReviewModel> review; // Replace with your actual review model type\n+  final ReviewModel review; // Replace with your actual review model type\n   final GlobalKey _cardKey = GlobalKey();\n \n   ReviewCard({super.key, required this.review});\n \n"
                },
                {
                    "date": 1750931617476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -314,13 +314,8 @@\n       ),\n     );\n   }\n \n-  String _getValue(String key, String defaultValue) {\n-    // Replace this with your actual data extraction logic\n-    // Example: return review[key]?.toString() ?? defaultValue;\n-    return defaultValue;\n-  }\n \n   int _getIntValue(String key, int defaultValue) {\n     // Replace this with your actual data extraction logic\n     // Example: return review[key] ?? defaultValue;\n"
                },
                {
                    "date": 1750931638619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n                         Row(\n                           mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                           children: [\n                             Text(\n-                              'Created: ${_getValue('createdDate', '3/15/2025')}',\n+                              'Created: ${DateTime.parse('createdDate').toLocal()}',\n                               style: const TextStyle(\n                                 fontSize: 14,\n                                 fontWeight: FontWeight.w600,\n                               ),\n"
                },
                {
                    "date": 1750931667714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n                         Row(\n                           mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                           children: [\n                             Text(\n-                              'Created: ${DateTime.parse('createdDate').toLocal()}',\n+                              'Created: ${DateTime.parse(review.createdAt ?? \"\")}',\n                               style: const TextStyle(\n                                 fontSize: 14,\n                                 fontWeight: FontWeight.w600,\n                               ),\n"
                },
                {
                    "date": 1750931681643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n                         Row(\n                           mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                           children: [\n                             Text(\n-                              'Created: ${DateTime.parse(review.createdAt ?? \"\")}',\n+                              'Created: ${DateTime.parse(review.createdAt ?? \"3\")}',\n                               style: const TextStyle(\n                                 fontSize: 14,\n                                 fontWeight: FontWeight.w600,\n                               ),\n@@ -95,9 +95,9 @@\n                                 color: Colors.green,\n                                 borderRadius: BorderRadius.circular(20),\n                               ),\n                               child: Text(\n-                                _getValue('gtin', '6285561000957'),\n+                                review.ggTIN ?? '6285561000957',\n                                 style: const TextStyle(\n                                   color: Colors.white,\n                                   fontSize: 12,\n                                   fontWeight: FontWeight.bold,\n"
                },
                {
                    "date": 1750931690769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n                                 color: Colors.green,\n                                 borderRadius: BorderRadius.circular(20),\n                               ),\n                               child: Text(\n-                                review.ggTIN ?? '6285561000957',\n+                                review.gTIN ?? '6285561000957',\n                                 style: const TextStyle(\n                                   color: Colors.white,\n                                   fontSize: 12,\n                                   fontWeight: FontWeight.bold,\n"
                },
                {
                    "date": 1750931697529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n                         Row(\n                           mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                           children: [\n                             Text(\n-                              'Created: ${DateTime.parse(review.createdAt ?? \"3\")}',\n+                              'Created: ${DateTime.parse(review.createdAt ?? \"\")}',\n                               style: const TextStyle(\n                                 fontSize: 14,\n                                 fontWeight: FontWeight.w600,\n                               ),\n@@ -95,9 +95,9 @@\n                                 color: Colors.green,\n                                 borderRadius: BorderRadius.circular(20),\n                               ),\n                               child: Text(\n-                                review.gTIN ?? '6285561000957',\n+                                review.gTIN ?? '',\n                                 style: const TextStyle(\n                                   color: Colors.white,\n                                   fontSize: 12,\n                                   fontWeight: FontWeight.bold,\n"
                },
                {
                    "date": 1750931707658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,10 +110,9 @@\n                         const SizedBox(height: 16),\n \n                         // Product name and rating\n                         Text(\n-                          _getValue('productName',\n-                              'SAMA OIL - PROMAX SP 0W16 API SP'),\n+                          review.brandName ?? 'SAMA OIL - PROMAX SP 0W16 API SP',\n                           style: const TextStyle(\n                             fontSize: 16,\n                             fontWeight: FontWeight.bold,\n                             color: Colors.black,\n"
                },
                {
                    "date": 1750931713200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,9 +111,9 @@\n \n                         // Product name and rating\n                         Text(\n                           review.brandName ??\n-                              'SAMA OIL - PROMAX SP 0W16 API SP',\n+                              '',\n                           style: const TextStyle(\n                             fontSize: 16,\n                             fontWeight: FontWeight.bold,\n                             color: Colors.black,\n"
                },
                {
                    "date": 1750931739928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,11 +126,9 @@\n                           children: [\n                             Row(\n                               children: List.generate(5, (starIndex) {\n                                 return Icon(\n-                                  starIndex < _getIntValue('rating', 4)\n-                                      ? Icons.star\n-                                      : Icons.star_border,\n+                                  starIndex < review.rating! ? Icons.star : Icons.star_border,\n                                   size: 20,\n                                   color: Colors.orange,\n                                 );\n                               }),\n"
                }
            ],
            "date": 1750931091911,
            "name": "Commit-0",
            "content": "// ignore_for_file: deprecated_member_use, avoid_print\n\nimport 'package:flutter/material.dart';\nimport 'package:flutter/rendering.dart';\nimport 'package:flutter/services.dart';\nimport 'dart:ui' as ui;\nimport 'dart:io';\nimport 'package:path_provider/path_provider.dart';\nimport 'package:share_plus/share_plus.dart';\nimport 'package:pdf/pdf.dart';\nimport 'package:pdf/widgets.dart' as pw;\nimport 'package:image/image.dart' as img;\n\nclass ReviewCard extends StatelessWidget {\n  final dynamic review; // Replace with your actual review model type\n  final GlobalKey _cardKey = GlobalKey();\n\n  ReviewCard({super.key, required this.review});\n\n  @override\n  Widget build(BuildContext context) {\n    return Card(\n      margin: const EdgeInsets.only(bottom: 16),\n      elevation: 4,\n      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),\n      child: Column(\n        children: [\n          // Card content for capture (without buttons)\n          RepaintBoundary(\n            key: _cardKey,\n            child: Container(\n              decoration: BoxDecoration(\n                borderRadius: BorderRadius.circular(8),\n                border: Border.all(color: Colors.black, width: 2),\n                color: Colors.white,\n              ),\n              child: Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  // Header Section with Reviews title and collapse arrow\n                  Container(\n                    width: double.infinity,\n                    padding: const EdgeInsets.all(16),\n                    decoration: const BoxDecoration(\n                      color: Colors.white,\n                      borderRadius: BorderRadius.only(\n                        topLeft: Radius.circular(6),\n                        topRight: Radius.circular(6),\n                      ),\n                    ),\n                    child: Row(\n                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                      children: [\n                        const Text(\n                          'Reviews',\n                          style: TextStyle(\n                            color: Colors.black,\n                            fontSize: 18,\n                            fontWeight: FontWeight.bold,\n                          ),\n                        ),\n                        const Icon(\n                          Icons.keyboard_arrow_up,\n                          color: Colors.black,\n                          size: 24,\n                        ),\n                      ],\n                    ),\n                  ),\n\n                  const SizedBox(height: 16),\n\n                  // Review Content Section\n                  Padding(\n                    padding: const EdgeInsets.all(16),\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        // Created date and GTIN\n                        Row(\n                          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                          children: [\n                            Text(\n                              'Created: ${_getValue('createdDate', '3/15/2025')}',\n                              style: const TextStyle(\n                                fontSize: 14,\n                                fontWeight: FontWeight.w600,\n                              ),\n                            ),\n                            Container(\n                              padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 4),\n                              decoration: BoxDecoration(\n                                color: Colors.green,\n                                borderRadius: BorderRadius.circular(20),\n                              ),\n                              child: Text(\n                                _getValue('gtin', '6285561000957'),\n                                style: const TextStyle(\n                                  color: Colors.white,\n                                  fontSize: 12,\n                                  fontWeight: FontWeight.bold,\n                                ),\n                              ),\n                            ),\n                          ],\n                        ),\n\n                        const SizedBox(height: 16),\n\n                        // Product name and rating\n                        Text(\n                          _getValue('productName', 'SAMA OIL - PROMAX SP 0W16 API SP'),\n                          style: const TextStyle(\n                            fontSize: 16,\n                            fontWeight: FontWeight.bold,\n                            color: Colors.black,\n                          ),\n                        ),\n\n                        const SizedBox(height: 8),\n\n                        // Star rating and score\n                        Row(\n                          children: [\n                            Row(\n                              children: List.generate(5, (starIndex) {\n                                return Icon(\n                                  starIndex < _getIntValue('rating', 4)\n                                      ? Icons.star\n                                      : Icons.star_border,\n                                  size: 20,\n                                  color: Colors.orange,\n                                );\n                              }),\n                            ),\n                            const SizedBox(width: 8),\n                            Text(\n                              '${_getIntValue('rating', 4)} out of 5',\n                              style: const TextStyle(\n                                fontSize: 16,\n                                fontWeight: FontWeight.bold,\n                                color: Colors.orange,\n                              ),\n                            ),\n                          ],\n                        ),\n\n                        const SizedBox(height: 16),\n\n                        // Review comment with quote styling\n                        Container(\n                          padding: const EdgeInsets.all(12),\n                          decoration: BoxDecoration(\n                            border: Border(\n                              left: BorderSide(\n                                color: Colors.grey[400]!,\n                                width: 4,\n                              ),\n                            ),\n                          ),\n                          child: Text(\n                            '\"${_getValue('comment', 'Good Product!')}\"',\n                            style: const TextStyle(\n                              fontSize: 16,\n                              fontStyle: FontStyle.italic,\n                              color: Colors.black87,\n                            ),\n                          ),\n                        ),\n\n                        const SizedBox(height: 16),\n\n                        // Review details section\n                        _buildDetailRow(\n                          'Reviewer ID:',\n                          _getValue('reviewerId', 'cm5fhascy0003xv1q15p5e0vv'),\n                          Icons.person,\n                        ),\n                        _buildDetailRow(\n                          'IP:',\n                          _getValue('ipAddress', '37.217.253.64'),\n                          Icons.location_on,\n                        ),\n\n                        const SizedBox(height: 16),\n\n                        // Updated info\n                        Text(\n                          'Updated: ${_getValue('updatedDate', '3/15/2025, 10:21:55 PM')}',\n                          style: TextStyle(\n                            fontSize: 12,\n                            color: Colors.grey[600],\n                          ),\n                        ),\n\n                        const SizedBox(height: 8),\n\n                        // Additional details\n                        Text(\n                          'GCP GLN ID: ${_getValue('gcpGlnId', '6285561')}',\n                          style: TextStyle(\n                            fontSize: 12,\n                            color: Colors.grey[600],\n                          ),\n                        ),\n\n                        const SizedBox(height: 4),\n\n                        Text(\n                          'GTIN: ${_getValue('gtin', '6285561000957')}',\n                          style: TextStyle(\n                            fontSize: 12,\n                            color: Colors.grey[600],\n                          ),\n                        ),\n\n                        const SizedBox(height: 8),\n\n                        const Divider(color: Colors.grey),\n\n                        const SizedBox(height: 8),\n\n                        // Review ID\n                        Text(\n                          'Review ID: ${_getValue('reviewId', 'cm8ah4yv0000...')}',\n                          style: TextStyle(\n                            fontSize: 12,\n                            color: Colors.grey[600],\n                          ),\n                        ),\n                      ],\n                    ),\n                  ),\n                ],\n              ),\n            ),\n          ),\n\n          // Action Buttons (outside RepaintBoundary, so they won't be captured)\n          Padding(\n            padding: const EdgeInsets.all(12),\n            child: Wrap(\n              spacing: 8,\n              runSpacing: 8,\n              alignment: WrapAlignment.center,\n              children: [\n                _buildActionButton(\n                    'PNG', Colors.blue[900]!, () => _downloadAs('png')),\n                _buildActionButton(\n                    'JPG', Colors.blue[900]!, () => _downloadAs('jpg')),\n                _buildActionButton(\n                    'PDF', Colors.blue[900]!, () => _downloadAs('pdf')),\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildDetailRow(String label, String value, IconData icon) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 4),\n      child: Row(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Icon(\n            icon,\n            size: 16,\n            color: Colors.grey[600],\n          ),\n          const SizedBox(width: 8),\n          Text(\n            '$label ',\n            style: const TextStyle(\n              fontSize: 14,\n              color: Colors.black87,\n            ),\n          ),\n          Expanded(\n            child: Text(\n              value,\n              style: const TextStyle(\n                fontSize: 14,\n                color: Colors.black87,\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildActionButton(String text, Color color, VoidCallback onPressed) {\n    return GestureDetector(\n      onTap: onPressed,\n      child: Container(\n        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),\n        decoration: BoxDecoration(\n          color: color,\n          borderRadius: BorderRadius.circular(4),\n        ),\n        child: Text(\n          text,\n          style: const TextStyle(\n            color: Colors.white,\n            fontWeight: FontWeight.bold,\n            fontSize: 12,\n          ),\n        ),\n      ),\n    );\n  }\n\n  String _getValue(String key, String defaultValue) {\n    // Replace this with your actual data extraction logic\n    // Example: return review[key]?.toString() ?? defaultValue;\n    return defaultValue;\n  }\n\n  int _getIntValue(String key, int defaultValue) {\n    // Replace this with your actual data extraction logic\n    // Example: return review[key] ?? defaultValue;\n    return defaultValue;\n  }\n\n  Future<void> _downloadAs(String format) async {\n    try {\n      if (format == 'pdf') {\n        await _generatePDF();\n      } else {\n        await _captureAndSave(format);\n      }\n    } catch (e) {\n      print('Error downloading as $format: $e');\n    }\n  }\n\n  Future<void> _captureAndSave(String format) async {\n    try {\n      RenderRepaintBoundary boundary =\n          _cardKey.currentContext!.findRenderObject() as RenderRepaintBoundary;\n\n      ui.Image image = await boundary.toImage(pixelRatio: 3.0);\n      ByteData? byteData =\n          await image.toByteData(format: ui.ImageByteFormat.png);\n\n      if (byteData != null) {\n        Uint8List pngBytes = byteData.buffer.asUint8List();\n        Uint8List finalBytes = pngBytes;\n        String fileExtension = format.toLowerCase();\n\n        if (format.toLowerCase() != 'png') {\n          img.Image? decodedImage = img.decodePng(pngBytes);\n          if (decodedImage != null) {\n            switch (format.toLowerCase()) {\n              case 'jpg':\n              case 'jpeg':\n                finalBytes = Uint8List.fromList(\n                    img.encodeJpg(decodedImage, quality: 95));\n                fileExtension = 'jpg';\n                break;\n              default:\n                finalBytes = pngBytes;\n                fileExtension = 'png';\n            }\n          }\n        }\n\n        final directory = await getTemporaryDirectory();\n        final fileName =\n            'review_info_${DateTime.now().millisecondsSinceEpoch}.$fileExtension';\n        final file = File('${directory.path}/$fileName');\n\n        await file.writeAsBytes(finalBytes);\n\n        await Share.shareXFiles([XFile(file.path)], text: 'Review Information');\n      }\n    } catch (e) {\n      print('Error capturing image: $e');\n    }\n  }\n\n  Future<void> _generatePDF() async {\n    try {\n      final pdf = pw.Document();\n\n      pdf.addPage(\n        pw.Page(\n          pageFormat: PdfPageFormat.a4,\n          build: (pw.Context context) {\n            return pw.Container(\n              decoration: pw.BoxDecoration(\n                border: pw.Border.all(color: PdfColors.black, width: 2),\n              ),\n              child: pw.Column(\n                crossAxisAlignment: pw.CrossAxisAlignment.start,\n                children: [\n                  pw.Container(\n                    width: double.infinity,\n                    padding: const pw.EdgeInsets.all(16),\n                    child: pw.Text(\n                      'Reviews',\n                      style: pw.TextStyle(\n                        color: PdfColors.black,\n                        fontSize: 18,\n                        fontWeight: pw.FontWeight.bold,\n                      ),\n                    ),\n                  ),\n                  pw.Padding(\n                    padding: const pw.EdgeInsets.all(16),\n                    child: pw.Column(\n                      crossAxisAlignment: pw.CrossAxisAlignment.start,\n                      children: [\n                        pw.Text(\n                          'Created: ${_getValue('createdDate', '3/15/2025')}',\n                          style: pw.TextStyle(fontWeight: pw.FontWeight.bold),\n                        ),\n                        pw.SizedBox(height: 8),\n                        pw.Text(\n                          _getValue('productName', 'SAMA OIL - PROMAX SP 0W16 API SP'),\n                          style: pw.TextStyle(\n                            fontSize: 16,\n                            fontWeight: pw.FontWeight.bold,\n                          ),\n                        ),\n                        pw.SizedBox(height: 8),\n                        pw.Text('Rating: ${_getIntValue('rating', 4)} out of 5'),\n                        pw.SizedBox(height: 8),\n                        pw.Text('\"${_getValue('comment', 'Good Product!')}\"'),\n                        pw.SizedBox(height: 8),\n                        pw.Text('Reviewer ID: ${_getValue('reviewerId', 'cm5fhascy0003xv1q15p5e0vv')}'),\n                        pw.Text('IP: ${_getValue('ipAddress', '37.217.253.64')}'),\n                        pw.SizedBox(height: 8),\n                        pw.Text('GTIN: ${_getValue('gtin', '6285561000957')}'),\n                      ],\n                    ),\n                  ),\n                ],\n              ),\n            );\n          },\n        ),\n      );\n\n      final directory = await getTemporaryDirectory();\n      final fileName = 'review_info_${DateTime.now().millisecondsSinceEpoch}.pdf';\n      final file = File('${directory.path}/$fileName');\n\n      await file.writeAsBytes(await pdf.save());\n\n      await Share.shareXFiles([XFile(file.path)], text: 'Review Information PDF');\n    } catch (e) {\n      print('Error generating PDF: $e');\n    }\n  }\n}"
        }
    ]
}